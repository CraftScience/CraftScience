<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Form Test</title>
      <link href="/2024/12/17/quiz/"/>
      <url>/2024/12/17/quiz/</url>
      
        <content type="html"><![CDATA[<form accept-charset="UTF-8" action="https://getform.io/{your-form-endpoint}" method="POST">    <input type="email" name="email" placeholder="Your Email">    <input type="text" name="name" placeholder="Your Name">    <input type="text" name="message" placeholder="Your Message"></form>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWJTU 6th CTF Wirte Up</title>
      <link href="/2024/12/07/writeup/"/>
      <url>/2024/12/07/writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="西南交通大学第六届-ctf-新秀杯"><a class="markdownIt-Anchor" href="#西南交通大学第六届-ctf-新秀杯"></a> 西南交通大学第六届 CTF 新秀杯</h1><p>Write up by Craftman, 2024.12.8</p><blockquote><p>这是本人第一次参加 CTF 相关的比赛。ACM 预感无望摆烂后，在朋友推荐下抱着玩玩的心态来打了这次新秀杯。突然发现题目风格很有意思，上网找资源抽丝剥茧般解谜也很喜欢。最后也取得了预想不到的成绩，感觉打开了一片新天地呐</p></blockquote><hr /><h2 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h2><h3 id="sga"><a class="markdownIt-Anchor" href="#sga"></a> SGA✅</h3><blockquote><p>Hint 很明显看出来是在说 MC,加上 sga 关键词一查就知道这种语言是指标准银河字母。不过在 59*7 的 bool 文件上卡了很久，一直以为有什么方式能转成 26 个字母。最后在 vscode 里打开 txt 文件选中 True 时屏幕上突然出现了神奇的符号：</p></blockquote><p><img src="/img/PixPin_2024-12-08_00-23-39.png" alt="sga" /></p><blockquote><p>恍然大悟啊！不过这样看上去还不是很清晰，让 gpt 写个程序把它转换为 59*7 的黑白图片，然后对照字母表逐个查找得到 flag</p></blockquote><h3 id="hear-the-image"><a class="markdownIt-Anchor" href="#hear-the-image"></a> hear the image❌</h3><blockquote><p>未解出，倒是弄通了 Stegsolve 的功能，Alpha 通道看上去确实也藏了像是波形的东西，只不过找不到规律和不懂 DSP 模数转换，遂放弃</p></blockquote><h3 id="rabbit-is-cute"><a class="markdownIt-Anchor" href="#rabbit-is-cute"></a> rabbit is cute✅</h3><blockquote><p>题干中长长的一串字符丢到 bing 里出现了 rabbit 密码的词条，于是找到 rabbit 在线解码把密钥 ears 丢进去得到 flag</p></blockquote><h3 id="zip-套娃"><a class="markdownIt-Anchor" href="#zip-套娃"></a> zip 套娃 ✅</h3><blockquote><p>体力活交给 GPT！从 499 开始递减循环一层层解开压缩包到 passwd0 打开便是 flag</p></blockquote><h3 id="喜欢无线电的小朋友你们好啊"><a class="markdownIt-Anchor" href="#喜欢无线电的小朋友你们好啊"></a> 喜欢无线电的小朋友你们好啊 ✅</h3><blockquote><p>这题其实坑了我挺久。从 Easypal, linux 里的 QSSTV 到 MP3Stego 都试了一遍没一个对的，最后找到叫 RX-SSTV 的软件录制系统内部声音，随着 mp3 的播放屏幕中央赫然出现了一只黄色圆圆的非人生物…</p></blockquote><h3 id="憧憬成为魔法少女"><a class="markdownIt-Anchor" href="#憧憬成为魔法少女"></a> 憧憬成为魔法少女 ❌</h3><blockquote><p>先打开 exe 玩了 10 分钟，打完洞窟 boss 就过不去了。于是上网查找相关资源，下了 wolfrpg 的地图、存档编辑器一堆，但发现第三关根本不存在。又用 OD 查了 exe 的内容，没找到 flag 的线索，只好放弃（角色死亡后有个弹窗挺在意的）</p></blockquote><hr /><h2 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h2><h3 id="core"><a class="markdownIt-Anchor" href="#core"></a> CORE！✅</h3><blockquote><p>这么奇怪的文段，放 bing 加上’ctf’的关键词就找到是社会主义核心编码。只能说确实核心！忠诚！</p></blockquote><h3 id="small-e"><a class="markdownIt-Anchor" href="#small-e"></a> Small E✅</h3><blockquote><p>查看代码，这道题的 e 很小，而 n 很大，可以考虑直接对 c 开方得到 m，使用 gmpy2 库内的 iroot 函数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from gmpy2 import *</span><br><span class="line">e = 7</span><br><span class="line">c = 17893546025324357554713268089491589743088766598037597203984135541130631314219733478023490997548741655173986527314027770588613588245409654719732906329866350579716813654588049567717610909843794609079467994304587802399707785433013489299651132525968937108295391868686239590678952807846434990845423260222159296868160100518167322428811994259189099760120176713914564892846384736718524109460788213163826433525319412761518005089469406853238375860558236049606096149263737836881960384811975809994420738957898897399147235233088306414793819889739632637379066926597185623981690335246577720715882741730751102487526709350698916482068546296680389848433003906471745928012185798691379858486060798977043188485148035357271061169371417950998767593545975636334935597227100311248999363350837374198152669503744990247647437480908512088123518593108429979999545336065592658373512439649947971096403642254557362707386825622000689833315132792697349405024438005770570704735765311891141728583737113803926393628528203468909727300030919794080280173519754333877848206747719337235049552069038690955441719203691845169089254402313374077010055143990269149592351759661852847353590050011857661075857871792125091224215029</span><br><span class="line">m = iroot(c, e)</span><br><span class="line"></span><br><span class="line">(mpz(1509929362730107239757109180274350623649646416382931337548547559314102444361599749155029351421754467710213883860546938271904311438070103585102641454606742121173738078589), True)</span><br></pre></td></tr></table></figure><blockquote><p>可以看到结果是 True 直接得到了 m 的值，接下来用 long 转 byte 的工具就得到 flag 啦</p></blockquote><h3 id="tree"><a class="markdownIt-Anchor" href="#tree"></a> TREE！✅</h3><blockquote><p>把 f[ ]数组丢到浏览器里，一个叫 <a href="http://oeis.org">oeis.org</a> 的网站显示这是 A000055 代表具有 n 个未标记节点的树数，大概是长这样的：<br /> a(1) = 1 [o] &gt;  a(2) = 1 [o-o] &gt;  a(3) = 1 [o-o-o] &gt;  a(4) = 2 [o-o-o and o-o-o-o] &gt;          |<br />         o<br />而 c[ ]数组则显示是卡特兰（Catalan）数列,其公式为 h(n)= h(0)*h(n-1) + h(1)*h(n-2) + … + h(n-1)h(0) (n&gt;=2, h(0)=h(1)=1)<br />查表可知 c[f[13]]=c[1301]，使用在线计算器得到一个 779 位的数字，再用 md5 工具转译得到 flag</p></blockquote><h3 id="白给了"><a class="markdownIt-Anchor" href="#白给了"></a> 白给了！✅</h3><blockquote><p>下载附件，发现由八种符号&gt; &lt; + - . , [ ]构成，搜索发现属于 brainfuck 加密，遂用在线工具解得 flag</p></blockquote><h3 id="随机疑惑"><a class="markdownIt-Anchor" href="#随机疑惑"></a> 随机疑惑！✅</h3><blockquote><p>最后一道密码题！首先丢到 gpt 让它分析代码功能，发现是利用随机数种子进行异或的加密方式（浏览时还发现能用 randcrack 来预测伪随机数）还好 key 和 r 都只有 8 位，可以暴力破解：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">#cc为密文，先base64解码</span><br><span class="line">cc=b&#x27;+cbm9PfS38a8l/b80uHlwf7Rjda5kdLF7aSw6vn608Lg1e3Ry9bQ4+fc2fq+0/7gxPHt5KjbhKfZ9//y0uf84eXw8qTYy8yCiqXv6OXAi6Hq0q7j2KHu2MSM0vv9k+yA5vnf5sqD+Ke/7avCyePLyqny8dbf08zMyf+50crN96a+0s+B7t3g0qrw/srswMWMzunN88j30Nbj8qjS1drd0O2Cy9y95a6B18Hj86yC6+Pl7Ory6/yw6Nbt9MPb++n62qPJltSG06bk0/rwiMqxxPXt9PXkw/rOy/bkwfLY2cz8zcLWyPXX0erfyObX0aXRxaKxxvnG1OS4k/bGjOvk0a3I7uHh8fLe2drbkdPn+qvSlqviicu49+ze2qLRw9L01OrGwa323vf409LAjuC9m+3C0d3nlK/H5eP91dz72+vSxNTg/eW5z6vj68e88d7N3cvb9O/t0+T7mquN96L+8eTx5OvF5szm0+TD8ef/jf/l8PH5yOTw8ufm6cbEzffC5OLj7d7U9+awkvXhxsL7lunZ8d3R28nl0dLOyMzi+eH65a7G+fbOyu+Fj+S7xPvk3uDN2Nf4+Njp26uG+N3j5PXbi/zg4dbD39DB9Pzv26vq4dTmiqTQ7sf28ubB0sTD7qrPxqjs/cm6ya2C6/7H6Nzy79y6xM/f5OnHz8f9i9//lvnz69nnksfD0Nvd09WF6Ni79auE2fq41tGGyqHh9MT+yvjP2PGG&#x27;</span><br><span class="line">cc=base64.b64decode(cc)</span><br><span class="line">flag = &#x27;flag&#123;&#x27; #搜索条件</span><br><span class="line">pool = &#x27;qwertyuiopasdfghjklzxcvbnm1234567890QWERTYUIOPASDFGHJKLZXCVBNM&#x27;</span><br><span class="line">assert flag.startswith(&#x27;flag&#123;&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def generate(length):</span><br><span class="line">    return &#x27;&#x27;.join(random.choices(pool, k=length))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def f(x):</span><br><span class="line">    random.seed(x)</span><br><span class="line">    return random.getrandbits(8)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def encrypt(plaintext, key):</span><br><span class="line">    plaintext = list(map(ord, plaintext))</span><br><span class="line">    for i in range(len(plaintext)):</span><br><span class="line">        key = f(key)</span><br><span class="line">        tmp = (key * r) % 251</span><br><span class="line">        #assert tmp != 0 and key != 0</span><br><span class="line">        plaintext[i] = plaintext[i] ^ tmp</span><br><span class="line">    plaintext = bytes(plaintext)</span><br><span class="line">    return plaintext</span><br><span class="line"></span><br><span class="line">def decrypt(ciphertext, key):</span><br><span class="line">    ciphertext=list(ciphertext)</span><br><span class="line">    for i in range(len(ciphertext)):</span><br><span class="line">        key = f(key)</span><br><span class="line">        tmp = (key * r) % 251</span><br><span class="line">        #assert tmp != 0 and key != 0</span><br><span class="line">        ciphertext[i] = ciphertext[i] ^ tmp</span><br><span class="line">    ciphertext = bytes(ciphertext)</span><br><span class="line">    return ciphertext</span><br><span class="line"></span><br><span class="line">for r in range(2,251):</span><br><span class="line">    for key in range(1,256):</span><br><span class="line">        m = flag</span><br><span class="line">        c = encrypt(m, key)</span><br><span class="line">        if(c in cc):</span><br><span class="line">            print(r)</span><br><span class="line">            print(key)</span><br><span class="line">            print(c)</span><br><span class="line">            print(cc.index(c))</span><br><span class="line"></span><br><span class="line">r=174</span><br><span class="line">key=34</span><br><span class="line">pos=211</span><br><span class="line">mm=decrypt(cc[211:],key)</span><br><span class="line">print(mm)</span><br><span class="line"></span><br><span class="line">b&#x27;flag&#123;welcome_to_ctf_swjtu_s8dy19ddshw01ks0xls0&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="pwn"><a class="markdownIt-Anchor" href="#pwn"></a> Pwn</h2><blockquote><p>对这个板块不太熟悉，所以没做几道</p></blockquote><h3 id="nc-test"><a class="markdownIt-Anchor" href="#nc-test"></a> NC TEST✅</h3><blockquote><p>上网搜 nc，意思是 netcat。 发现 kali 自带，就打开来输入网址试一试，结果就出 flag 了…</p></blockquote><p><img src="/img/PixPin_2024-12-08_14-53-46.png" alt="nc" /></p><h3 id="大猿口算"><a class="markdownIt-Anchor" href="#大猿口算"></a> 大猿口算 ✅</h3><blockquote><p>这道也是看做出来的人多才尝试的。同样 nc 先连接个试试</p></blockquote><p><img src="/img/PixPin_2024-12-08_14-57-43.png" alt="nc" /></p><blockquote><p>看来是要在 5s 内返回 4*4 行列式的结果，不愧是大猿才能做的口算题 👍 直接让 gpt 写脚本帮忙搞定了</p></blockquote><hr /><h2 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h2><h3 id="f12"><a class="markdownIt-Anchor" href="#f12"></a> F12✅</h3><blockquote><p>如题，按 F12，源代码里有一段只含有{ } [ ] + !的注释，复制到网路上看看，结果是 JSFUCK，调出控制台粘贴运行就是 flag</p></blockquote><h3 id="asciidle"><a class="markdownIt-Anchor" href="#asciidle"></a> asciidle❌</h3><blockquote><p>wordle 的 ascii 版，尝试一行后 network 里会向后端发送一个 check 的文件，里面包含了 payload 的待检查字符和 response 的校验结果，2 其中 0 代表正确，1 代表存在该字符但不在该位置，2 代表不存在该字符。这里没想到 flag 的检验也是后端完成的，本来写了个调用接口暴力破解的脚本，但是在 check 八次后答案还是会刷新掉，然后就没时间了…感觉得从 gameover 的 message 入手啊</p></blockquote><h3 id="key"><a class="markdownIt-Anchor" href="#key"></a> key✅</h3><blockquote><p>点开容器是个 php 程序，首先检验输入为字符串时是否等于 998244353，然后把输入 intval()后再跟整数 713031681 比较。一个数怎么会有同时有两个值呢？比较在意 intval 这个函数，查了查确实存在绕过技巧：对于字符串比较会在遇到非数字字符时停止读取，而非字符串会先做运算再取整。题目里禁用了很多运算符，唯独乘法还可以操作。998244353*0.714285714571931≈713031681，加上<code>/?key=</code>输入后就骗过程序啦！</p></blockquote><h3 id="签到题"><a class="markdownIt-Anchor" href="#签到题"></a> 签到题 ✅</h3><blockquote><p>等到我开始做的时候群里已经讨论完了…修改<code>?pass=true</code>即可</p></blockquote><h3 id="组委会模拟器"><a class="markdownIt-Anchor" href="#组委会模拟器"></a> 组委会模拟器 ✅</h3><blockquote><p>手工撤回还是放弃吧，在控制台写入自动查找消息元素并点击的脚本：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setInterval(() =&gt;</span><br><span class="line">    Array.from(document.querySelectorAll(&quot;.fakeqq-message__bubble&quot;))</span><br><span class="line">        .filter((element) =&gt; element.innerHTML.indexOf(&quot;flag[&quot;) != -1)</span><br><span class="line">        .forEach((element) =&gt; element.click())</span><br><span class="line">    , 100)</span><br></pre></td></tr></table></figure><h3 id="跑路-gpt"><a class="markdownIt-Anchor" href="#跑路-gpt"></a> 跑路 GPT❌</h3><blockquote><p>bing 搜索的时候找到了这道题的原型，wp 几乎都采取了 sql 注入的方式来找到 message 表里的 flag。只不过做这道题时 union select 只找到了一条消息和没内容的 flag 表，sqlmap 连接 ip 时也没能连接成功，只好放弃</p></blockquote><h3 id="验证码"><a class="markdownIt-Anchor" href="#验证码"></a> 验证码 ✅</h3><blockquote><p>首先发现网页禁用了 f12 和复制粘贴，f12 只要点击地址栏再按就能调用出来，至于复制粘贴权限由于在 csdn、百度文库上已经久经考验，浏览器上早已安排好了纂改猴(Tampermonkey)和权限解除插件，直接强行复制粘贴验证码过了 🤭</p></blockquote><hr /><h2 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h2><blockquote><p>这个部分也是没什么经验，看分数好拿才做的</p></blockquote><h3 id="pyc"><a class="markdownIt-Anchor" href="#pyc"></a> .PYC==✅</h3><blockquote><p>下载的是反编译的 py 文件，拖到在线工具里查看内容是一个凯撒密码变换，让 GPT 帮忙写个解码程序就混过去了</p></blockquote><h3 id="upx"><a class="markdownIt-Anchor" href="#upx"></a> UPX！✅</h3><blockquote><p>题干说明程序外面有壳，而题目的 UPX 搜一搜后就是一个去壳软件。把去壳后的 exe 放 ida64 里 main 函数里找伪代码，看描述应该是把输入的字符串和 0x53 异或操作在和 enc 比较：</p></blockquote><p><img src="/img/PixPin_2024-12-08_16-13-50.png" alt="upx" /></p><blockquote><p>反其道行之，写个逆向程序：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">def xor_with_0x53u(hex_string):</span><br><span class="line">    # 将16进制字符串转换为ASCII字符</span><br><span class="line">    ascii_char = bytes.fromhex(hex_string).decode(&#x27;ascii&#x27;)</span><br><span class="line"></span><br><span class="line">    # 逐个字符进行异或运算并保存结果</span><br><span class="line">    xor_results = []</span><br><span class="line">    for char in ascii_char:</span><br><span class="line">        # 与0x39进行异或,格式化结果为16进制字符串</span><br><span class="line">        xor_result = format(ord(char) ^ 0x53, &#x27;02x&#x27;)</span><br><span class="line">        byte_value = bytes.fromhex(xor_result) # 将十六进制字符串转换为字节类型</span><br><span class="line">        str_value = byte_value.decode(&#x27;utf-8&#x27;)</span><br><span class="line">        xor_results.append(str_value)</span><br><span class="line">    return xor_results</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    hex_input = input(&quot;请输入16进制ASCII码（不带0x前缀）：&quot;)</span><br><span class="line">    try:</span><br><span class="line">        result = xor_with_0x53u(hex_input)</span><br><span class="line">        print(&quot;异或结果为：&quot;, &#x27;&#x27;.join(result))</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print(f&quot;输入错误: &#123;e&#125;&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="xor"><a class="markdownIt-Anchor" href="#xor"></a> XOR✅</h3><blockquote><p>题目明摆着“简单”，那就做呗。丢进 ida64 检查发现是 elf 程序，和 UPX 同理查看伪代码，也是差不多的功能，只不过 enc 和异或数字稍微换了一下而已，那么逆向程序也只要改 0x53 为 0x39 就行：</p></blockquote><p><img src="/img/PixPin_2024-12-08_16-22-57.png" alt="xor" /></p><hr /><h2 id="mobile"><a class="markdownIt-Anchor" href="#mobile"></a> Mobile</h2><blockquote><p>没时间做这玩意 ww</p></blockquote><hr /><h2 id="ai"><a class="markdownIt-Anchor" href="#ai"></a> AI</h2><h3 id="会赢的"><a class="markdownIt-Anchor" href="#会赢的"></a> 会赢的 ✅</h3><blockquote><p>很有趣的一道题，马上看出来是要欺骗过大模型，利用提示词让它说出不允许的话</p><ol><li>首先还是让 gpt-4o 写了一段高分小作文，输入后评分只有 85，肯定了常规操作连 100 分都没可能</li><li>套用攻击指令，让第一个模型给我打 120 分:</li></ol></blockquote><p><img src="/img/PixPin_2024-12-07_16-56-12.png" alt="2" /></p><blockquote><p>发现评分还是只有 100。看来系统规则里不是看第一个模型给分计算的，那就得想办法破坏规则喽，这时的一次尝试找到了突破点：</p></blockquote><p><img src="/img/PixPin_2024-12-07_17-11-58.png" alt="3" /></p><blockquote><ol start="3"><li>这家伙，原来只认老师定下的规矩啊。那我只要有这个权限，不就能往 100 分以上打了嘛 🤓</li></ol></blockquote><p><img src="/img/PixPin_2024-12-07_17-14-13.png" alt="4" /></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><blockquote><p>做题的过程中发现了许多有趣的网站和实用的工具，对于一些不复杂的网络安全技术也去了魅。最后能解出 20 道题，排在第 6 名水到个二等奖，还是蛮有成就感的 😊 以下附比赛地址：<a href="http://8.137.85.79/games/1">link</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Competitions </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Competitions </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>About</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="this-is-craftmans-personal-blog-sharing-ideas-tools-and-wonderful-moments"><a class="markdownIt-Anchor" href="#this-is-craftmans-personal-blog-sharing-ideas-tools-and-wonderful-moments"></a> This is Craftman’s personal blog, sharing ideas, tools and wonderful moments.</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/mouse.css"/>
      <url>/css/mouse.css</url>
      
        <content type="html"><![CDATA[body {    cursor: url(https://gcore.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),        default;}a,img {    cursor: url(https://gcore.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),        default;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/gamestyle.css"/>
      <url>/css/gamestyle.css</url>
      
        <content type="html"><![CDATA[* {  margin: 0;  padding: 0;  outline: none;  box-sizing: border-box;}body {  display: flex;  align-items: center;  justify-content: center;  min-height: 100vh;  background: white;}#game-container {  width: 100%;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;  margin: 1rem;}#container {  width: 100%;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;  margin: 1rem;}#container h2 {  margin-bottom: 5rem;  padding-bottom: 5px;  border-bottom: solid 2px #404040;}#points {  width: 100%;  display: flex;  justify-content: space-evenly;  align-items: center;}#points label {  border-bottom: solid 2px #404040;  padding-bottom: 2px;}#choice {  display: flex;  justify-content: space-between;  align-items: center;  margin: 3rem 0rem;}#choice img {  width: 50%;}#computerChoice,#playerChoice {  display: flex;  flex-direction: column;  justify-content: center;  align-items: center;  max-width: 130px;  max-height: 130px;}#computerChoiceTxt,#playerChoiceTxt {  margin-top: 1rem;}#rescontainer {  width: 200px;  height: 50px;  position: relative;  background: white;}#resTxt {  width: 20px;  top: 0px;  display: inline-block;  line-height: 1em;  position: absolute;}#buttons {  max-width: 100%;  display: flex;  justify-content: space-between;  flex-wrap: wrap;}/* BUTTON DESIGN */.btn {  border: none;  background: #404040;  color: #ffffff !important;  font-weight: 100;  padding: 15px;  text-transform: uppercase;  border-radius: 6px;  display: inline-block;  transition: all 0.3s ease 0s;  cursor: pointer;  margin: 0rem 0.3rem;}@media screen and (max-width: 611px) {  .btn {    width: 12%;    border: none;    background: #404040;    color: #ffffff !important;    font-weight: 100;    padding: 15px;    text-transform: uppercase;    border-radius: 6px;    display: inline-block;    transition: all 0.3s ease 0s;    cursor: pointer;    margin: 0rem 0.3rem;  }}.btn:hover {  color: #404040 !important;  font-weight: 700 !important;  background: white;  -webkit-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);  -moz-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);  transition: all 0.3s ease 0s;}.btn:disabled {  cursor: not-allowed;}#res {  display: inline-block;  position: relative;  top: 10px;}._th-container ._th-item {  margin-bottom: 3px;  position: relative;  width: 0;  height: 0;  cursor: pointer;  opacity: 0;  background-color: #404040;  border-radius: 100%;  text-align: center;  line-height: 30px;  -webkit-transition: all 0.35s;  -o-transition: all 0.35s;  transition: all 0.35s;  right: 30px;}._th-container:hover ._th-item._item-reset {  width: 100px;  line-height: 100px;  height: 100px;  margin-left: 10px;}._th-container:hover ._th-item._item-reset._new {  margin-left: -2px;}._th-click-hover {  position: relative;  -webkit-transition: all 0.5s;  -o-transition: all 0.5s;  transition: all 0.5s;  height: 100px;  width: 100px;  cursor: pointer;  opacity: 0.6;  border-radius: 100%;  background-color: #404040;  text-align: center;  line-height: 100px;  right: 0;}._th-container:hover {  left: -5px;}._th-container {  font-size: 17px;  -webkit-transition: all 0.5s;  -o-transition: all 0.5s;  transition: all 0.5s;  left: -35px;  top: 20%;  position: fixed;  -webkit-box-sizing: border-box;  box-sizing: border-box;  z-index: 100000;  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}._th-container:hover ._th-item:hover {  opacity: 1;  background-color: #404040;  color: aliceblue;}._th-container:hover ._th-click-hover {  opacity: 0.6;}._th-container:hover ._th-item {  opacity: 0.6;  right: 0;}._th-container ._th-click-hover:hover {  opacity: 1;  background-color: #404040;  color: aliceblue;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/travelstyle.css"/>
      <url>/css/travelstyle.css</url>
      
        <content type="html"><![CDATA[.mapcontainer {  position: relative;  width: 100%;}.mapimage {  width: 100%;}.mapoverlay {  position: absolute;  bottom: 0;  left: 100%;  right: 0;  overflow: hidden;  width: 0;  height: 100%;  transition: 0.5s ease;}.mapcontainer:hover .mapoverlay {  width: 100%;  left: 0;}.map {  position: relative;  top: 50%;  left: 50%;  -webkit-transform: translate(-50%, -50%);  -ms-transform: translate(-50%, -50%);  transform: translate(-50%, -50%);}.container .card {  height: 500px;  max-width: 400px;  position: relative;  margin: 30px 10px;  padding: 20px 15px;  background: white;  display: flex;  flex-direction: column;  transition: 0.3s ease-in-out;}/*apply css properties to card class when it get pointed by cursor*/.container .card:hover {  height: 500px;}/*apply css properties to imgbox class*//*apply css properties to img tag*/.container .card .imgbox img {  max-width: 100%;  border-radius: 4px;}/*apply css properties to content class*/.container .card .content {  position: relative;  margin-top: -100px;  padding: 10px 15px;  text-align: center;  color: #111;  visibility: hidden;  opacity: 0;  transition: 0.3s ease-in-out;}/*apply css properties to content when card gets hovered*/.container .card:hover .content {  visibility: visible;  opacity: 1;  margin-top: -10px;  transition-delay: 0.3s;}:root {  --width: 125px;  --height: 125px;}.ball {  opacity: 0.7;  width: var(--width);  height: var(--height);  background: url("../image/avatar.png");  background-size: contain;  background-repeat: no-repeat;  position: absolute;  animation: toRight linear 6.8s infinite alternate,    bounce linear 17s infinite alternate;}.ball:hover {  animation-play-state: paused;  background: url("../image/gotyou!.png");  width: var(--width);  height: var(--height);  background-size: contain;  background-repeat: no-repeat;  position: absolute;}@keyframes bounce {  0% {    top: 0;  }  48% {  }  50% {    top: calc(100% - var(--height));  }  52% {  }  100% {    top: 0;  }}@keyframes toRight {  0% {    left: 0;  }  100% {    left: calc(100% - var(--width));  }}@keyframes stop {  0% {  }  100% {  }}.container {  display: grid;  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));  gap: 2rem;  max-width: 1200px;  width: 100%;}.flipcard {  perspective: 1000px;  height: 400px;}.flipcard-inner {  position: relative;  width: 100%;  height: 100%;  transition: transform 0.8s;  transform-style: preserve-3d;}.flipcard:hover .flipcard-inner {  transform: rotateY(180deg);}.flipcard-front,.flipcard-back {  position: absolute;  width: 100%;  height: 100%;  backface-visibility: hidden;  border-radius: 20px;  overflow: hidden;  padding: 2rem;  display: flex;  flex-direction: column;  justify-content: space-between;}.flipcard-front {  background-color: #ffffff;  box-shadow: 15px 15px 30px rgba(0, 0, 0, 0.1),    -15px -15px 30px rgba(255, 255, 255, 0.8),    inset 5px 5px 10px rgba(0, 0, 0, 0.05),    inset -5px -5px 10px rgba(255, 255, 255, 0.5);}.flipcard-back {  background-color: #ffffff;  transform: rotateY(180deg);  box-shadow: 15px 15px 30px rgba(0, 0, 0, 0.1),    -15px -15px 30px rgba(255, 255, 255, 0.8),    inset 5px 5px 10px rgba(0, 0, 0, 0.05),    inset -5px -5px 10px rgba(255, 255, 255, 0.5);}.flipcard-image {  width: calc(100% + 4rem);  height: 300px;  object-fit: cover;  margin: -2rem -2rem 1rem -2rem;  border-radius: 20px 20px 0 0;}.carousel__caption {  width: 100%;  max-width: 80%;  margin: 24px auto 0;}.carousel__caption p {  font: 20px "Verdana";  color: black;  text-align: center;}.carousel {  position: relative;  width: 100%;  height: 100%;  margin: 0;  padding: 0;  overflow: hidden;  transform: translateZ(0px); /* stops flickering */}.carousel__buffer {  display: none;}.carousel__buffer img {  width: 70%;  margin: 0;  padding: 0;  overflow: hidden;  transform: translateZ(0px); /* stops flickering */}.carousel__buffer {  display: none;}.carousel__buffer img {  width: 70%;}.carousel__slide {  position: absolute;  opacity: 0;  width: 100%;  height: 100%;  -webkit-transition: opacity 1s;  -moz-transition: opacity 1s;  -o-transition: opacity 1s;  transition: opacity 1s;  background: no-repeat center top;  background-size: cover;  overflow: auto;}.carousel__slide img {  display: block;  position: relative;  margin: 55px auto 50px;  width: 70%;}.carousel__input:checked + .carousel__slide {  position: static;  opacity: 1;}.carousel__arrow {  position: absolute;  display: none;  cursor: pointer;  background: white;  top: 50%;  left: 0%;  width: 40px;  height: 40px;  border-radius: 50%;  z-index: 10;}.carousel__arrow:before {  position: absolute;  content: "";  padding: 8px; /* Arrow size */  box-shadow: 1px -1px 0 1px black inset;  -webkit-box-shadow: 2px -2px black inset;  -moz-box-shadow: 2px -2px black inset;  border: solid transparent;  border-width: 0 0 2rem 2rem;}.carousel__arrow--prev {  margin-left: 8%;}.carousel__arrow--prev:before {  transform: rotate(45deg);  margin: -4px 0 0 -24px;}.carousel__arrow--next {  margin-left: 87%;}.carousel__arrow--next:before {  transform: rotate(225deg);  margin: -4px 0 0 15px;}#carousel__slide--1:checked ~ .carousel__arrow--1,#carousel__slide--2:checked ~ .carousel__arrow--2,#carousel__slide--3:checked ~ .carousel__arrow--3,#carousel__slide--4:checked ~ .carousel__arrow--4,#carousel__slide--5:checked ~ .carousel__arrow--5 {  display: block;}.carousel__bullets {  list-style: none;  margin: 12px auto -6px;  padding: 0;  position: absolute;  top: 88%;  left: 0;  right: 0;  text-align: center;  z-index: 10;}.carousel__bullets li {  display: inline-block;}.carousel__bullets--bullet {  cursor: pointer;  display: block;  width: 10px;  height: 10px;  margin: 0 4px 0;  border-radius: 50%;  background: white;  border: 1px solid #000;}#carousel__slide--1:checked  ~ .carousel__arrow--1  ~ .carousel__bullets  li:nth-child(1)  .carousel__bullets--bullet,#carousel__slide--2:checked  ~ .carousel__arrow--2  ~ .carousel__bullets  li:nth-child(2)  .carousel__bullets--bullet,#carousel__slide--3:checked  ~ .carousel__arrow--3  ~ .carousel__bullets  li:nth-child(3)  .carousel__bullets--bullet,#carousel__slide--4:checked  ~ .carousel__arrow--4  ~ .carousel__bullets  li:nth-child(4)  .carousel__bullets--bullet,#carousel__slide--5:checked  ~ .carousel__arrow--5  ~ .carousel__bullets  li:nth-child(5)  .carousel__bullets--bullet {  background: black;  box-shadow: inset 0 0 0 2px #12171b; /* Separates blue dot from border */}@media screen and (max-width: 690px) {  .carousel__buffer {    width: 100%;    position: relative;    display: inline-block;    visibility: hidden;    z-index: -1;    padding-bottom: 120px;  }  .carousel__buffer img {    width: 100%;    height: auto;    -webkit-box-shadow: none;    -moz-box-shadow: none;    box-shadow: none;    margin-top: 0;  }  .carousel {    height: auto;    overflow: visible;  }  .carousel__slide {    -webkit-transition: opacity 0s;    -moz-transition: opacity 0s;    -o-transition: opacity 0s;    transition: opacity 0s;    position: absolute;    top: 0;    height: auto;    background: transparent none !important;  }  .carousel__slide img {    width: 100%;    height: auto;    -webkit-box-shadow: none;    -moz-box-shadow: none;    box-shadow: none;    margin-top: 0;  }  .carousel__arrow {    top: calc(50% - 70px);  }  .carousel__arrow--prev {    margin-left: 0%;  }  .carousel__arrow--next {    margin-left: 90%;  }  .carousel__bullets {    top: auto;    bottom: 25%;  }}img {  --b: 2px;  /* the border thickness*/  --g: 0px;  /* the gap */  --c: #0009;  /* the color */  outline-offset: calc(var(--s) / -2);  cursor: pointer;}img:hover {  outline: var(--b) solid var(--c);  outline-offset: var(--g);}img + img {  border-radius: 50%;}body,html {  margin: 0;  padding: 0;  height: 100%;}.scroll-container {  height: 200vh;  scroll-timeline: --section block;}.text-section {  height: 100vh;  display: flex;  justify-content: center;  align-items: center;  position: sticky;  top: 0;}h1 {  font-size: 4rem;  text-align: center;}h2 {  font-size: 2rem;}.word {  --pxPerWord: 20vh;  --start: calc(var(--i) * var(--pxPerWord));  --end: calc((var(--i) + 1) * var(--pxPerWord));  display: inline-block;  filter: blur(20px);  opacity: 0;  animation: fx linear both;  animation-timeline: scroll(root);  animation-range: var(--start) var(--end);}@keyframes fx {  to {    filter: blur(0);    opacity: 1;  }}html {  box-sizing: border-box;}*,*:before,*:after {  box-sizing: inherit;}html {  -ms-text-size-adjust: 100%;  -webkit-text-size-adjust: 100%;}body {  margin: 0;}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section {  display: block;}summary {  display: list-item;}audio,canvas,progress,video {  display: inline-block;}progress {  vertical-align: baseline;}audio:not([controls]) {  display: none;  height: 0;}[hidden],template {  display: none;}a {  background-color: transparent;}a:active,a:hover {  outline-width: 0;}abbr[title] {  border-bottom: none;  text-decoration: underline;  text-decoration: underline dotted;}b,strong {  font-weight: bolder;}dfn {  font-style: italic;}mark {  background: #ff0;  color: #000;}small {  font-size: 80%;}sub,sup {  font-size: 75%;  line-height: 0;  position: relative;  vertical-align: baseline;}sub {  bottom: -0.25em;}sup {  top: -0.5em;}figure {  margin: 1em 40px;}img {  border-style: none;}code,kbd,pre,samp {  font-family: monospace, monospace;  font-size: 1em;}hr {  box-sizing: content-box;  height: 0;  overflow: visible;}button,input,select,textarea,optgroup {  font: inherit;  margin: 0;}optgroup {  font-weight: bold;}button,input {  overflow: visible;}button,select {  text-transform: none;}button,[type="button"],[type="reset"],[type="submit"] {  -webkit-appearance: button;}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner {  border-style: none;  padding: 0;}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring {  outline: 1px dotted ButtonText;}fieldset {  border: 1px solid #c0c0c0;  margin: 0 2px;  padding: 0.35em 0.625em 0.75em;}legend {  color: inherit;  display: table;  max-width: 100%;  padding: 0;  white-space: normal;}textarea {  overflow: auto;}[type="checkbox"],[type="radio"] {  padding: 0;}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button {  height: auto;}[type="search"] {  -webkit-appearance: textfield;  outline-offset: -2px;}[type="search"]::-webkit-search-decoration {  -webkit-appearance: none;}::-webkit-file-upload-button {  -webkit-appearance: button;  font: inherit;}/* End extract */html,body {  font-family: Verdana;  font-size: 15px;  line-height: 1.5;}html {  overflow-x: hidden;}h1 {  font-size: 36px;}h2 {  font-size: 30px;}h3 {  font-size: 24px;}h4 {  font-size: 20px;}h5 {  font-size: 18px;}h6 {  font-size: 16px;}.w3-serif {  font-family: serif;}.w3-sans-serif {  font-family: sans-serif;}.w3-cursive {  font-family: cursive;}.w3-monospace {  font-family: monospace;}h1,h2,h3,h4,h5,h6 {  font-family: "Segoe UI", Arial, sans-serif;  font-weight: 400;  margin: 10px 0;}.w3-wide {  letter-spacing: 4px;}hr {  border: 0;  border-top: 1px solid #eee;  margin: 20px 0;}.w3-image {  max-width: 100%;  height: auto;}img {  vertical-align: middle;}a {  color: inherit;}.w3-table,.w3-table-all {  border-collapse: collapse;  border-spacing: 0;  width: 100%;  display: table;}.w3-table-all {  border: 1px solid #fff;}.w3-bordered tr,.w3-table-all tr {  border-bottom: 1px solid #ddd;}.w3-striped tbody tr:nth-child(even) {  background-color: #f1f1f1;}.w3-table-all tr:nth-child(odd) {  background-color: #fff;}.w3-table-all tr:nth-child(even) {  background-color: #f1f1f1;}.w3-hoverable tbody tr:hover,.w3-ul.w3-hoverable li:hover {  background-color: #fff;}.w3-centered tr th,.w3-centered tr td {  text-align: center;}.w3-table td,.w3-table th,.w3-table-all td,.w3-table-all th {  padding: 8px 8px;  display: table-cell;  text-align: left;  vertical-align: top;}.w3-table th:first-child,.w3-table td:first-child,.w3-table-all th:first-child,.w3-table-all td:first-child {  padding-left: 16px;}.w3-btn,.w3-button {  border: none;  display: inline-block;  padding: 8px 16px;  vertical-align: middle;  overflow: hidden;  text-decoration: none;  color: inherit;  background-color: inherit;  text-align: center;  cursor: pointer;  white-space: nowrap;}.w3-btn:hover {  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);}.w3-btn,.w3-button {  -webkit-touch-callout: none;  -webkit-user-select: none;  -khtml-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}.w3-disabled,.w3-btn:disabled,.w3-button:disabled {  cursor: not-allowed;  opacity: 0.3;}.w3-disabled *,:disabled * {  pointer-events: none;}.w3-btn.w3-disabled:hover,.w3-btn:disabled:hover {  box-shadow: none;}.w3-badge,.w3-tag {  background-color: #000;  color: #fff;  display: inline-block;  padding-left: 8px;  padding-right: 8px;  text-align: center;}.w3-badge {  border-radius: 50%;}.w3-ul {  list-style-type: none;  padding: 0;  margin: 0;}.w3-ul li {  padding: 8px 16px;  border-bottom: 1px solid #ddd;}.w3-ul li:last-child {  border-bottom: none;}.w3-tooltip,.w3-display-container {  position: relative;}.w3-tooltip .w3-text {  display: none;}.w3-tooltip:hover .w3-text {  display: inline-block;}.w3-ripple:active {  opacity: 0.5;}.w3-ripple {  transition: opacity 0s;}.w3-input {  padding: 8px;  display: block;  border: none;  border-bottom: 1px solid #fff;  width: 100%;}.w3-select {  padding: 9px 0;  width: 100%;  border: none;  border-bottom: 1px solid #fff;}.w3-dropdown-click,.w3-dropdown-hover {  position: relative;  display: inline-block;  cursor: pointer;}.w3-dropdown-hover:hover .w3-dropdown-content {  display: block;}.w3-dropdown-hover:first-child,.w3-dropdown-click:hover {  background-color: #fff;  color: #000;}.w3-dropdown-hover:hover > .w3-button:first-child,.w3-dropdown-click:hover > .w3-button:first-child {  background-color: #fff;  color: #000;}.w3-dropdown-content {  cursor: auto;  color: #000;  background-color: #fff;  display: none;  position: absolute;  min-width: 160px;  margin: 0;  padding: 0;  z-index: 1;}.w3-check,.w3-radio {  width: 24px;  height: 24px;  position: relative;  top: 6px;}.w3-sidebar {  height: 100%;  width: 200px;  background-color: #fff;  position: fixed !important;  z-index: 1;  overflow: auto;}.w3-bar-block .w3-dropdown-hover,.w3-bar-block .w3-dropdown-click {  width: 100%;}.w3-bar-block .w3-dropdown-hover .w3-dropdown-content,.w3-bar-block .w3-dropdown-click .w3-dropdown-content {  min-width: 100%;}.w3-bar-block .w3-dropdown-hover .w3-button,.w3-bar-block .w3-dropdown-click .w3-button {  width: 100%;  text-align: left;  padding: 8px 16px;}.w3-main,#main {  transition: margin-left 0.4s;}.w3-modal {  z-index: 3;  display: none;  padding-top: 100px;  position: fixed;  left: 0;  top: 0;  width: 100%;  height: 100%;  overflow: auto;  background-color: rgb(0, 0, 0);  background-color: rgba(0, 0, 0, 0.4);}.w3-modal-content {  margin: auto;  background-color: #fff;  position: relative;  padding: 0;  outline: 0;  width: 600px;}.w3-bar {  width: 100%;  overflow: hidden;}.w3-center .w3-bar {  display: inline-block;  width: auto;}.w3-bar .w3-bar-item {  padding: 8px 16px;  float: left;  width: auto;  border: none;  display: block;  outline: 0;}.w3-bar .w3-dropdown-hover,.w3-bar .w3-dropdown-click {  position: static;  float: left;}.w3-bar .w3-button {  white-space: normal;}.w3-bar-block .w3-bar-item {  width: 100%;  display: block;  padding: 8px 16px;  text-align: left;  border: none;  white-space: normal;  float: none;  outline: 0;}.w3-bar-block.w3-center .w3-bar-item {  text-align: center;}.w3-block {  display: block;  width: 100%;}.w3-responsive {  display: block;  overflow-x: auto;}.w3-container:after,.w3-container:before,.w3-panel:after,.w3-panel:before,.w3-row:after,.w3-row:before,.w3-row-padding:after,.w3-row-padding:before,.w3-cell-row:before,.w3-cell-row:after,.w3-clear:after,.w3-clear:before,.w3-bar:before,.w3-bar:after {  content: "";  display: table;  clear: both;}.w3-col,.w3-half,.w3-third,.w3-twothird,.w3-threequarter,.w3-quarter {  float: left;  width: 100%;}.w3-col.s1 {  width: 8.33333%;}.w3-col.s2 {  width: 16.66666%;}.w3-col.s3 {  width: 24.99999%;}.w3-col.s4 {  width: 33.33333%;}.w3-col.s5 {  width: 41.66666%;}.w3-col.s6 {  width: 49.99999%;}.w3-col.s7 {  width: 58.33333%;}.w3-col.s8 {  width: 66.66666%;}.w3-col.s9 {  width: 74.99999%;}.w3-col.s10 {  width: 83.33333%;}.w3-col.s11 {  width: 91.66666%;}.w3-col.s12 {  width: 99.99999%;}@media (min-width: 601px) {  .w3-col.m1 {    width: 8.33333%;  }  .w3-col.m2 {    width: 16.66666%;  }  .w3-col.m3,  .w3-quarter {    width: 24.99999%;  }  .w3-col.m4,  .w3-third {    width: 33.33333%;  }  .w3-col.m5 {    width: 41.66666%;  }  .w3-col.m6,  .w3-half {    width: 49.99999%;  }  .w3-col.m7 {    width: 58.33333%;  }  .w3-col.m8,  .w3-twothird {    width: 66.66666%;  }  .w3-col.m9,  .w3-threequarter {    width: 74.99999%;  }  .w3-col.m10 {    width: 83.33333%;  }  .w3-col.m11 {    width: 91.66666%;  }  .w3-col.m12 {    width: 99.99999%;  }}@media (min-width: 993px) {  .w3-col.l1 {    width: 8.33333%;  }  .w3-col.l2 {    width: 16.66666%;  }  .w3-col.l3 {    width: 24.99999%;  }  .w3-col.l4 {    width: 33.33333%;  }  .w3-col.l5 {    width: 41.66666%;  }  .w3-col.l6 {    width: 49.99999%;  }  .w3-col.l7 {    width: 58.33333%;  }  .w3-col.l8 {    width: 66.66666%;  }  .w3-col.l9 {    width: 74.99999%;  }  .w3-col.l10 {    width: 83.33333%;  }  .w3-col.l11 {    width: 91.66666%;  }  .w3-col.l12 {    width: 99.99999%;  }}.w3-rest {  overflow: hidden;}.w3-stretch {  margin-left: -16px;  margin-right: -16px;}.w3-content,.w3-auto {  margin-left: auto;  margin-right: auto;}.w3-content {  max-width: 980px;}.w3-auto {  max-width: 1140px;}.w3-cell-row {  display: table;  width: 100%;}.w3-cell {  display: table-cell;}.w3-cell-top {  vertical-align: top;}.w3-cell-middle {  vertical-align: middle;}.w3-cell-bottom {  vertical-align: bottom;}.w3-hide {  display: none !important;}.w3-show-block,.w3-show {  display: block !important;}.w3-show-inline-block {  display: inline-block !important;}@media (max-width: 1205px) {  .w3-auto {    max-width: 95%;  }}@media (max-width: 600px) {  .w3-modal-content {    margin: 0 10px;    width: auto !important;  }  .w3-modal {    padding-top: 30px;  }  .w3-dropdown-hover.w3-mobile .w3-dropdown-content,  .w3-dropdown-click.w3-mobile .w3-dropdown-content {    position: relative;  }  .w3-hide-small {    display: none !important;  }  .w3-mobile {    display: block;    width: 100% !important;  }  .w3-bar-item.w3-mobile,  .w3-dropdown-hover.w3-mobile,  .w3-dropdown-click.w3-mobile {    text-align: center;  }  .w3-dropdown-hover.w3-mobile,  .w3-dropdown-hover.w3-mobile .w3-btn,  .w3-dropdown-hover.w3-mobile .w3-button,  .w3-dropdown-click.w3-mobile,  .w3-dropdown-click.w3-mobile .w3-btn,  .w3-dropdown-click.w3-mobile .w3-button {    width: 100%;  }}@media (max-width: 768px) {  .w3-modal-content {    width: 500px;  }  .w3-modal {    padding-top: 50px;  }}@media (min-width: 993px) {  .w3-modal-content {    width: 900px;  }  .w3-hide-large {    display: none !important;  }  .w3-sidebar.w3-collapse {    display: block !important;  }}@media (max-width: 992px) and (min-width: 601px) {  .w3-hide-medium {    display: none !important;  }}@media (max-width: 992px) {  .w3-sidebar.w3-collapse {    display: none;  }  .w3-main {    margin-left: 0 !important;    margin-right: 0 !important;  }  .w3-auto {    max-width: 100%;  }}.w3-top,.w3-bottom {  position: fixed;  width: 100%;  z-index: 1;}.w3-top {  top: 0;}.w3-bottom {  bottom: 0;}.w3-overlay {  position: fixed;  display: none;  width: 100%;  height: 100%;  top: 0;  left: 0;  right: 0;  bottom: 0;  background-color: rgba(0, 0, 0, 0.5);  z-index: 2;}.w3-display-topleft {  position: absolute;  left: 0;  top: 0;}.w3-display-topright {  position: absolute;  right: 0;  top: 0;}.w3-display-bottomleft {  position: absolute;  left: 0;  bottom: 0;}.w3-display-bottomright {  position: absolute;  right: 0;  bottom: 0;}.w3-display-middle {  position: absolute;  top: 50%;  left: 50%;  transform: translate(-50%, -50%);  -ms-transform: translate(-50%, -50%);}.w3-display-left {  position: absolute;  top: 50%;  left: 0%;  transform: translate(0%, -50%);  -ms-transform: translate(-0%, -50%);}.w3-display-right {  position: absolute;  top: 50%;  right: 0%;  transform: translate(0%, -50%);  -ms-transform: translate(0%, -50%);}.w3-display-topmiddle {  position: absolute;  left: 50%;  top: 0;  transform: translate(-50%, 0%);  -ms-transform: translate(-50%, 0%);}.w3-display-bottommiddle {  position: absolute;  left: 50%;  bottom: 0;  transform: translate(-50%, 0%);  -ms-transform: translate(-50%, 0%);}.w3-display-container:hover .w3-display-hover {  display: block;}.w3-display-container:hover span.w3-display-hover {  display: inline-block;}.w3-display-hover {  display: none;}.w3-display-position {  position: absolute;}.w3-circle {  border-radius: 50%;}.w3-round-small {  border-radius: 2px;}.w3-round,.w3-round-medium {  border-radius: 4px;}.w3-round-large {  border-radius: 8px;}.w3-round-xlarge {  border-radius: 16px;}.w3-round-xxlarge {  border-radius: 32px;}.w3-row-padding,.w3-row-padding > .w3-half,.w3-row-padding > .w3-third,.w3-row-padding > .w3-twothird,.w3-row-padding > .w3-threequarter,.w3-row-padding > .w3-quarter,.w3-row-padding > .w3-col {  padding: 0 8px;}.w3-container,.w3-panel {  padding: 0.01em 16px;}.w3-panel {  margin-top: 16px;  margin-bottom: 16px;}.w3-code,.w3-codespan {  font-family: Consolas, "courier new";  font-size: 16px;}.w3-code {  width: auto;  background-color: #fff;  padding: 8px 12px;  border-left: 4px solid #4caf50;  word-wrap: break-word;}.w3-codespan {  color: crimson;  background-color: #f1f1f1;  padding-left: 4px;  padding-right: 4px;  font-size: 110%;}.w3-card,.w3-card-2 {  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);}.w3-card-4,.w3-hover-shadow:hover {  box-shadow: 0 4px 10px 0 rgba(0, 0, 0, 0.2), 0 4px 20px 0 rgba(0, 0, 0, 0.19);}.w3-spin {  animation: w3-spin 2s infinite linear;}@keyframes w3-spin {  0% {    transform: rotate(0deg);  }  100% {    transform: rotate(359deg);  }}.w3-animate-fading {  animation: fading 10s infinite;}@keyframes fading {  0% {    opacity: 0;  }  50% {    opacity: 1;  }  100% {    opacity: 0;  }}.w3-animate-opacity {  animation: opac 0.8s;}@keyframes opac {  from {    opacity: 0;  }  to {    opacity: 1;  }}.w3-animate-top {  position: relative;  animation: animatetop 0.4s;}@keyframes animatetop {  from {    top: -300px;    opacity: 0;  }  to {    top: 0;    opacity: 1;  }}.w3-animate-left {  position: relative;  animation: animateleft 0.4s;}@keyframes animateleft {  from {    left: -300px;    opacity: 0;  }  to {    left: 0;    opacity: 1;  }}.w3-animate-right {  position: relative;  animation: animateright 0.4s;}@keyframes animateright {  from {    right: -300px;    opacity: 0;  }  to {    right: 0;    opacity: 1;  }}.w3-animate-bottom {  position: relative;  animation: animatebottom 0.4s;}@keyframes animatebottom {  from {    bottom: -300px;    opacity: 0;  }  to {    bottom: 0;    opacity: 1;  }}.w3-animate-zoom {  animation: animatezoom 0.6s;}@keyframes animatezoom {  from {    transform: scale(0);  }  to {    transform: scale(1);  }}.w3-animate-input {  transition: width 0.4s ease-in-out;}.w3-animate-input:focus {  width: 100% !important;}.w3-opacity,.w3-hover-opacity:hover {  opacity: 0.6;}.w3-opacity-off,.w3-hover-opacity-off:hover {  opacity: 1;}.w3-opacity-max {  opacity: 0.25;}.w3-opacity-min {  opacity: 0.75;}.w3-greyscale-max,.w3-grayscale-max,.w3-hover-greyscale:hover,.w3-hover-grayscale:hover {  filter: grayscale(100%);}.w3-greyscale,.w3-grayscale {  filter: grayscale(75%);}.w3-greyscale-min,.w3-grayscale-min {  filter: grayscale(50%);}.w3-sepia {  filter: sepia(75%);}.w3-sepia-max,.w3-hover-sepia:hover {  filter: sepia(100%);}.w3-sepia-min {  filter: sepia(50%);}.w3-tiny {  font-size: 10px !important;}.w3-small {  font-size: 12px !important;}.w3-medium {  font-size: 15px !important;}.w3-large {  font-size: 18px !important;}.w3-xlarge {  font-size: 24px !important;}.w3-xxlarge {  font-size: 36px !important;}.w3-xxxlarge {  font-size: 48px !important;}.w3-jumbo {  font-size: 64px !important;}.w3-left-align {  text-align: left !important;}.w3-right-align {  text-align: right !important;}.w3-justify {  text-align: justify !important;}.w3-center {  text-align: center !important;}.w3-border-0 {  border: 0 !important;}.w3-border {  border: 1px solid #fff !important;}.w3-border-top {  border-top: 1px solid #fff !important;}.w3-border-bottom {  border-bottom: 1px solid #fff !important;}.w3-border-left {  border-left: 1px solid #fff !important;}.w3-border-right {  border-right: 1px solid #fff !important;}.w3-topbar {  border-top: 6px solid #fff !important;}.w3-bottombar {  border-bottom: 6px solid #fff !important;}.w3-leftbar {  border-left: 6px solid #fff !important;}.w3-rightbar {  border-right: 6px solid #fff !important;}.w3-section,.w3-code {  margin-top: 16px !important;  margin-bottom: 16px !important;}.w3-margin {  margin: 16px !important;}.w3-margin-top {  margin-top: 16px !important;}.w3-margin-bottom {  margin-bottom: 16px !important;}.w3-margin-left {  margin-left: 16px !important;}.w3-margin-right {  margin-right: 16px !important;}.w3-padding-small {  padding: 4px 8px !important;}.w3-padding {  padding: 8px 16px !important;}.w3-padding-large {  padding: 12px 24px !important;}.w3-padding-16 {  padding-top: 16px !important;  padding-bottom: 16px !important;}.w3-padding-24 {  padding-top: 24px !important;  padding-bottom: 24px !important;}.w3-padding-32 {  padding-top: 32px !important;  padding-bottom: 32px !important;}.w3-padding-48 {  padding-top: 48px !important;  padding-bottom: 48px !important;}.w3-padding-64 {  padding-top: 64px !important;  padding-bottom: 64px !important;}.w3-padding-top-64 {  padding-top: 64px !important;}.w3-padding-top-48 {  padding-top: 48px !important;}.w3-padding-top-32 {  padding-top: 32px !important;}.w3-padding-top-24 {  padding-top: 24px !important;}.w3-left {  float: left !important;}.w3-right {  float: right !important;}.w3-button:hover {  color: #000 !important;  background-color: #fff !important;}.w3-transparent,.w3-hover-none:hover {  background-color: transparent !important;}.w3-hover-none:hover {  box-shadow: none !important;}/* Colors */.w3-amber,.w3-hover-amber:hover {  color: #000 !important;  background-color: #ffc107 !important;}.w3-aqua,.w3-hover-aqua:hover {  color: #000 !important;  background-color: #00ffff !important;}.w3-blue,.w3-hover-blue:hover {  color: #fff !important;  background-color: #2196f3 !important;}.w3-light-blue,.w3-hover-light-blue:hover {  color: #000 !important;  background-color: #87ceeb !important;}.w3-brown,.w3-hover-brown:hover {  color: #fff !important;  background-color: #795548 !important;}.w3-cyan,.w3-hover-cyan:hover {  color: #000 !important;  background-color: #00bcd4 !important;}.w3-blue-grey,.w3-hover-blue-grey:hover,.w3-blue-gray,.w3-hover-blue-gray:hover {  color: #fff !important;  background-color: #607d8b !important;}.w3-green,.w3-hover-green:hover {  color: #fff !important;  background-color: #4caf50 !important;}.w3-light-green,.w3-hover-light-green:hover {  color: #000 !important;  background-color: #8bc34a !important;}.w3-indigo,.w3-hover-indigo:hover {  color: #fff !important;  background-color: #3f51b5 !important;}.w3-khaki,.w3-hover-khaki:hover {  color: #000 !important;  background-color: #f0e68c !important;}.w3-lime,.w3-hover-lime:hover {  color: #000 !important;  background-color: #cddc39 !important;}.w3-orange,.w3-hover-orange:hover {  color: #000 !important;  background-color: #ff9800 !important;}.w3-deep-orange,.w3-hover-deep-orange:hover {  color: #fff !important;  background-color: #ff5722 !important;}.w3-pink,.w3-hover-pink:hover {  color: #fff !important;  background-color: #e91e63 !important;}.w3-purple,.w3-hover-purple:hover {  color: #fff !important;  background-color: #9c27b0 !important;}.w3-deep-purple,.w3-hover-deep-purple:hover {  color: #fff !important;  background-color: #673ab7 !important;}.w3-red,.w3-hover-red:hover {  color: #fff !important;  background-color: #f44336 !important;}.w3-sand,.w3-hover-sand:hover {  color: #000 !important;  background-color: #fdf5e6 !important;}.w3-teal,.w3-hover-teal:hover {  color: #fff !important;  background-color: #009688 !important;}.w3-yellow,.w3-hover-yellow:hover {  color: #000 !important;  background-color: #ffeb3b !important;}.w3-white,.w3-hover-white:hover {  color: #000 !important;  background-color: #fff !important;}.w3-black,.w3-hover-black:hover {  color: #fff !important;  background-color: #000 !important;}.w3-grey,.w3-hover-grey:hover,.w3-gray,.w3-hover-gray:hover {  color: #000 !important;  background-color: #9e9e9e !important;}.w3-light-grey,.w3-hover-light-grey:hover,.w3-light-gray,.w3-hover-light-gray:hover {  color: #000 !important;  background-color: #f1f1f1 !important;}.w3-dark-grey,.w3-hover-dark-grey:hover,.w3-dark-gray,.w3-hover-dark-gray:hover {  color: #fff !important;  background-color: #616161 !important;}.w3-pale-red,.w3-hover-pale-red:hover {  color: #000 !important;  background-color: #ffdddd !important;}.w3-pale-green,.w3-hover-pale-green:hover {  color: #000 !important;  background-color: #ddffdd !important;}.w3-pale-yellow,.w3-hover-pale-yellow:hover {  color: #000 !important;  background-color: #ffffcc !important;}.w3-pale-blue,.w3-hover-pale-blue:hover {  color: #000 !important;  background-color: #ddffff !important;}.w3-text-amber,.w3-hover-text-amber:hover {  color: #ffc107 !important;}.w3-text-aqua,.w3-hover-text-aqua:hover {  color: #00ffff !important;}.w3-text-blue,.w3-hover-text-blue:hover {  color: #2196f3 !important;}.w3-text-light-blue,.w3-hover-text-light-blue:hover {  color: #87ceeb !important;}.w3-text-brown,.w3-hover-text-brown:hover {  color: #795548 !important;}.w3-text-cyan,.w3-hover-text-cyan:hover {  color: #00bcd4 !important;}.w3-text-blue-grey,.w3-hover-text-blue-grey:hover,.w3-text-blue-gray,.w3-hover-text-blue-gray:hover {  color: #607d8b !important;}.w3-text-green,.w3-hover-text-green:hover {  color: #4caf50 !important;}.w3-text-light-green,.w3-hover-text-light-green:hover {  color: #8bc34a !important;}.w3-text-indigo,.w3-hover-text-indigo:hover {  color: #3f51b5 !important;}.w3-text-khaki,.w3-hover-text-khaki:hover {  color: #b4aa50 !important;}.w3-text-lime,.w3-hover-text-lime:hover {  color: #cddc39 !important;}.w3-text-orange,.w3-hover-text-orange:hover {  color: #ff9800 !important;}.w3-text-deep-orange,.w3-hover-text-deep-orange:hover {  color: #ff5722 !important;}.w3-text-pink,.w3-hover-text-pink:hover {  color: #e91e63 !important;}.w3-text-purple,.w3-hover-text-purple:hover {  color: #9c27b0 !important;}.w3-text-deep-purple,.w3-hover-text-deep-purple:hover {  color: #673ab7 !important;}.w3-text-red,.w3-hover-text-red:hover {  color: #f44336 !important;}.w3-text-sand,.w3-hover-text-sand:hover {  color: #fdf5e6 !important;}.w3-text-teal,.w3-hover-text-teal:hover {  color: #009688 !important;}.w3-text-yellow,.w3-hover-text-yellow:hover {  color: #d2be0e !important;}.w3-text-white,.w3-hover-text-white:hover {  color: #fff !important;}.w3-text-black,.w3-hover-text-black:hover {  color: #000 !important;}.w3-text-grey,.w3-hover-text-grey:hover,.w3-text-gray,.w3-hover-text-gray:hover {  color: #757575 !important;}.w3-text-light-grey,.w3-hover-text-light-grey:hover,.w3-text-light-gray,.w3-hover-text-light-gray:hover {  color: #f1f1f1 !important;}.w3-text-dark-grey,.w3-hover-text-dark-grey:hover,.w3-text-dark-gray,.w3-hover-text-dark-gray:hover {  color: #3a3a3a !important;}.w3-border-amber,.w3-hover-border-amber:hover {  border-color: #ffc107 !important;}.w3-border-aqua,.w3-hover-border-aqua:hover {  border-color: #00ffff !important;}.w3-border-blue,.w3-hover-border-blue:hover {  border-color: #2196f3 !important;}.w3-border-light-blue,.w3-hover-border-light-blue:hover {  border-color: #87ceeb !important;}.w3-border-brown,.w3-hover-border-brown:hover {  border-color: #795548 !important;}.w3-border-cyan,.w3-hover-border-cyan:hover {  border-color: #00bcd4 !important;}.w3-border-blue-grey,.w3-hover-border-blue-grey:hover,.w3-border-blue-gray,.w3-hover-border-blue-gray:hover {  border-color: #607d8b !important;}.w3-border-green,.w3-hover-border-green:hover {  border-color: #4caf50 !important;}.w3-border-light-green,.w3-hover-border-light-green:hover {  border-color: #8bc34a !important;}.w3-border-indigo,.w3-hover-border-indigo:hover {  border-color: #3f51b5 !important;}.w3-border-khaki,.w3-hover-border-khaki:hover {  border-color: #f0e68c !important;}.w3-border-lime,.w3-hover-border-lime:hover {  border-color: #cddc39 !important;}.w3-border-orange,.w3-hover-border-orange:hover {  border-color: #ff9800 !important;}.w3-border-deep-orange,.w3-hover-border-deep-orange:hover {  border-color: #ff5722 !important;}.w3-border-pink,.w3-hover-border-pink:hover {  border-color: #e91e63 !important;}.w3-border-purple,.w3-hover-border-purple:hover {  border-color: #9c27b0 !important;}.w3-border-deep-purple,.w3-hover-border-deep-purple:hover {  border-color: #673ab7 !important;}.w3-border-red,.w3-hover-border-red:hover {  border-color: #f44336 !important;}.w3-border-sand,.w3-hover-border-sand:hover {  border-color: #fdf5e6 !important;}.w3-border-teal,.w3-hover-border-teal:hover {  border-color: #009688 !important;}.w3-border-yellow,.w3-hover-border-yellow:hover {  border-color: #ffeb3b !important;}.w3-border-white,.w3-hover-border-white:hover {  border-color: #fff !important;}.w3-border-black,.w3-hover-border-black:hover {  border-color: #000 !important;}.w3-border-grey,.w3-hover-border-grey:hover,.w3-border-gray,.w3-hover-border-gray:hover {  border-color: #9e9e9e !important;}.w3-border-light-grey,.w3-hover-border-light-grey:hover,.w3-border-light-gray,.w3-hover-border-light-gray:hover {  border-color: #f1f1f1 !important;}.w3-border-dark-grey,.w3-hover-border-dark-grey:hover,.w3-border-dark-gray,.w3-hover-border-dark-gray:hover {  border-color: #616161 !important;}.w3-border-pale-red,.w3-hover-border-pale-red:hover {  border-color: #ffe7e7 !important;}.w3-border-pale-green,.w3-hover-border-pale-green:hover {  border-color: #e7ffe7 !important;}.w3-border-pale-yellow,.w3-hover-border-pale-yellow:hover {  border-color: #ffffcc !important;}.w3-border-pale-blue,.w3-hover-border-pale-blue:hover {  border-color: #e7ffff !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/multiplayer.css"/>
      <url>/css/multiplayer.css</url>
      
        <content type="html"><![CDATA[* {  margin: 0;  padding: 0;  outline: none;  box-sizing: border-box;}body {  display: flex;  align-items: center;  justify-content: center;  min-height: 100vh;}.playername {  font-style: italic;  width: 100%;  display: flex;  justify-content: space-evenly;  align-items: center;}#game-container {  width: 100%;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;  margin: 1rem;}#container {  width: 100%;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;  margin: 1rem;}#container h2 {  margin-bottom: 5rem;  padding-bottom: 5px;}#points {  width: 100%;  display: flex;  justify-content: space-evenly;  align-items: center;}#points label {  border-bottom: solid 2px #404040;  padding-bottom: 2px;}#choice {  display: flex;  justify-content: space-between;  align-items: center;  margin: 3rem 0rem;}#choice img {  width: 50%;}#rivalChoice,#playerChoice {  display: flex;  flex-direction: column;  justify-content: center;  align-items: center;  max-width: 130px;  max-height: 130px;}#rivalChoiceTxt,#playerChoiceTxt {  margin-top: 1rem;}#rescontainer {  width: 200px;  height: 50px;  position: relative;  background: white;}#resTxt {  width: 20px;  top: 0px;  display: inline-block;  line-height: 1em;  position: absolute;}#buttons {  max-width: 100%;  display: flex;  justify-content: space-between;  flex-wrap: wrap;}/* BUTTON DESIGN */.btn {  border: none;  background: #404040;  color: #ffffff !important;  font-weight: 100;  padding: 15px;  text-transform: uppercase;  border-radius: 6px;  display: inline-block;  transition: all 0.3s ease 0s;  cursor: pointer;  margin: 0rem 0.3rem;}@media screen and (max-width: 611px) {  .btn {    width: 12%;    border: none;    background: #404040;    color: #ffffff !important;    font-weight: 100;    padding: 15px;    text-transform: uppercase;    border-radius: 6px;    display: inline-block;    transition: all 0.3s ease 0s;    cursor: pointer;    margin: 0rem 0.3rem;  }}.btn:hover {  color: #404040 !important;  font-weight: 700 !important;  background: white;  -webkit-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);  -moz-box-shadow: 0px 5px 40px -10px rgba(0, 0, 0, 0.57);  transition: all 0.3s ease 0s;}.btn:disabled {  cursor: not-allowed;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/multiplayer.js"/>
      <url>/js/multiplayer.js</url>
      
        <content type="html"><![CDATA[let player1 = document.querySelector("#player1");let player2 = document.querySelector("#player2");let papajudge = 0;function getCookie(cname) {  var name = cname + "=";  var ca = document.cookie.split(";");  for (var i = 0; i < ca.length; i++) {    var c = ca[i].trim();    if (c.indexOf(name) == 0) {      return c.substring(name.length, c.length);    }  }  if (cname == "username") {    return "";  } else return "0";}var winning = getCookie("win");var losing = getCookie("lose");function setCookie(cname, cvalue, exdays) {  var d = new Date();  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);  var expires = "expires=" + d.toGMTString();  document.cookie = cname + "=" + cvalue + "; " + expires;}function updateCookie(cname, cvalue, exdays) {  var d = new Date();  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);  var expires = "expires=" + d.toGMTString();  document.cookie = cname + "=" + cvalue + "; " + expires;}var rivalNumber = 12;var user = decodeURI(document.URL); //获取到编码的数据并进行解码user = user.slice(user.indexOf("=") + 1);console.log(user);player1.textContent = user;//初始化GoEasy对象;let goEasy = GoEasy.getInstance({  host: "hangzhou.goeasy.io", //新加坡host：singapore.goeasy.io  appkey: "BC-461f5c6ef8ed482d8f5fb674c2b144ce", //替换为您的应用appkey  modules: ["pubsub"],});//建立连接goEasy.connect({  id: user,  onSuccess: function () {    //连接成功    console.log("GoEasy connect successfully."); //连接成功    publishMessage("12," + user);  },  onFailed: function (error) {    //连接失败    console.log(      "Failed to connect GoEasy, code:" + error.code + ",error:" + error.content    );  },  onProgress: function (attempts) {    //连接或自动重连中    console.log("GoEasy is connecting", attempts);  },});//订阅消息goEasy.pubsub.subscribe({  channel: "demo", //替换为您自己的channel  presence: {    enable: true,  },  onMessage: function (message) {    //收到消息    rival = message.content.split(",");    if (rival[1] != user) {      player2.textContent = rival[1];      if (rival[0] == "papa") papajudge = 2;      if (rival[0] == "pahui") papajudge = 1;      if (0 <= rival[0] <= 10) rivalNumber = parseInt(rival[0]);      if (rival[0] == 71) rivalNumber = 11;      if (rival[0] == 12) publishMessage("13," + user);      change = true;    }  },  onSuccess: function () {    console.log("Channel订阅成功。");  },  onFailed: function (error) {    console.log(      "Channel订阅失败, 错误编码：" + error.code + " 错误信息：" + error.content    );  },});//发送function publishMessage(num) {  goEasy.pubsub.publish({    channel: "demo", //替换为您自己的channel    message: num, //替换为您想要发送的消息内容    onSuccess: function () {      console.log("消息发布成功。");    },    onFailed: function (error) {      console.log(        "消息发送失败，错误编码：" + error.code + " 错误信息：" + error.content      );    },  });}// goEasy.pubsub.subscribePresence({//   channel:"demo",//   membersLimit: 4, //可选项，定义返回的最新上线成员列表的数量，默认为10，最多支持返回100个成员//   onPresence: function (presenceEvent) {//     console.log("Presence events: ", JSON.stringify(presenceEvent));//   },//   onSuccess: function () {//     //监听成功//     console.log("subscribe presence successfully.");//   },//   onFailed: function (error) {//     //监听失败//     console.log(//       "Failed to subscribe presence, code:" +//         error.code +//         ",error:" +//         error.content//     );//   },// });// goEasy.pubsub.hereNow({//   channel:"demo",//   limit: 4, //可选项，定义返回的最新上线成员列表的数量，默认为10，最多支持返回最新上线的100个成员//   onSuccess: function (response) {//     //获取成功//     console.log("hereNow response: " + JSON.stringify(response)); //json格式的response//   },//   onFailed: function (error) {//     //获取失败//     console.log(//       "Failed to obtain online clients, code:" +//         error.code +//         ",error:" +//         error.content//     );//   },// });//logicconst choices = [  {    id: 0,    image: "../img/zero.png",  },  {    id: 1,    image: "../img/one.png",  },  {    id: 2,    image: "../img/two.png",  },  {    id: 3,    image: "../img/three.png",  },  {    id: 4,    image: "../img/four.png",  },  {    id: 5,    image: "../img/five.png",  },  {    id: 6,    image: "../img/six.png",  },  {    id: 7,    image: "../img/seven.png",  },  {    id: 8,    image: "../img/eight.png",  },  {    id: 9,    image: "../img/nine.png",  },  {    id: 10,    image: "../img/ten.png",  },  {    id: 11,    image: "../img/seven-one.png",  },  {    id: 12,    image: "../img/waiting.png",  },];let resTxt = document.querySelector("#resTxt");let playerPoints = document.querySelector(".playerPoints");let rivalPoints = document.querySelector(".rivalPoints");let playerChoiceImg = document.querySelector("#playerChoiceImg");let playerChoiceTxt = document.querySelector("#playerChoiceTxt");let rivalChoiceImg = document.querySelector("#rivalChoiceImg");let rivalChoiceTxt = document.querySelector("#rivalChoiceTxt");let buttons = document.querySelectorAll(".btn");let login = document.querySelector("#user");let points = [3, 3];var change = false;var act = document.getElementById("act");var status1 = document.getElementById("status1");var status2 = document.getElementById("status2");var status3 = document.getElementById("status3");var status4 = document.getElementById("status4");let playerjudge = 12;let rivaljudge = 12;killjudge = false;let kill = false;// EVENT LISTENERSbuttons.forEach((button) => {  button.addEventListener("click", () => {    playerPoints.textContent = points[0];    rivalPoints.textContent = points[1];    if (button.textContent === "0") {      playerChoiceImg.src = choices[0].image;      playerChoiceTxt.textContent = choices[0].id;      playerjudge = 0;    } else if (button.textContent === "1") {      playerChoiceImg.src = choices[1].image;      playerChoiceTxt.textContent = choices[1].id;      playerjudge = 1;    } else if (button.textContent === "2") {      playerChoiceImg.src = choices[2].image;      playerChoiceTxt.textContent = choices[2].id;      playerjudge = 2;    } else if (button.textContent === "3") {      playerChoiceImg.src = choices[3].image;      playerChoiceTxt.textContent = choices[3].id;      playerjudge = 3;    } else if (button.textContent === "4") {      playerChoiceImg.src = choices[4].image;      playerChoiceTxt.textContent = choices[4].id;      playerjudge = 4;    } else if (button.textContent === "5") {      playerChoiceImg.src = choices[5].image;      playerChoiceTxt.textContent = choices[5].id;      playerjudge = 5;    } else if (button.textContent === "6") {      playerChoiceImg.src = choices[6].image;      playerChoiceTxt.textContent = choices[6].id;      playerjudge = 6;    } else if (button.textContent === "7") {      playerChoiceImg.src = choices[7].image;      playerChoiceTxt.textContent = choices[7].id;      playerjudge = 7;    } else if (button.textContent === "8") {      playerChoiceImg.src = choices[8].image;      playerChoiceTxt.textContent = choices[8].id;      playerjudge = 8;    } else if (button.textContent === "9") {      playerChoiceImg.src = choices[9].image;      playerChoiceTxt.textContent = choices[9].id;      playerjudge = 9;    } else if (button.textContent === "10") {      playerChoiceImg.src = choices[10].image;      playerChoiceTxt.textContent = choices[10].id;      playerjudge = 10;    } else if (button.textContent === "71") {      playerChoiceImg.src = choices[11].image;      playerChoiceTxt.textContent = choices[11].id;      act.disabled = true;      act.style.backgroundColor = "#404040 ";      killjudge = false;    }    publishMessage(button.textContent + "," + user);    getRivalChoice();  });});//FUNCTIONSfunction getRivalChoice() {  buttons.forEach((button) => {    button.disabled = true;  });  rivalChoiceImg.src = "../img/waiting.png";  var current = 10;  myinterval = setInterval(function () {    (rivalChoiceImg.style.transform = "rotate(" + current + "deg)"),      (current += 10);  }, 20);  //rival传参  var changeinterval = setInterval(function () {    if (change == true && rivalNumber != 12) {      change = false;      clearInterval(myinterval);      rivalChoiceImg.style.transform = null;      rivalChoiceImg.src = choices[rivalNumber].image;      rivalChoiceTxt.textContent = choices[rivalNumber].id;      gameRules();      playerPoints.textContent = points[0];      rivalPoints.textContent = points[1];      buttons.forEach((button) => {        button.disabled = false;      });      if (playerjudge == 1) status1.disabled = true;      if (playerjudge == 2) status2.disabled = true;      if (playerjudge == 3) status3.disabled = true;      if (playerjudge == 4) status4.disabled = true;      if (killjudge == false) act.disabled = true;      setTimeout(() => {        whoWon();      }, 500);      clearInterval(changeinterval);    }  }, 1000);}function gameRules() {  if (playerChoiceTxt.textContent === rivalChoiceTxt.textContent) {    resTxt.textContent = "Tie";  } else if (    playerChoiceTxt.textContent === "11" &&    rivalChoiceTxt.textContent !== "0"  ) {    points[1] -= 3;    resTxt.textContent = "Dong";    killjudge = false;    MoveRight();  } else if (    playerChoiceTxt.textContent !== "0" &&    rivalChoiceTxt.textContent === "11"  ) {    points[0] -= 3;    resTxt.textContent = "Dong";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "0" &&    rivalChoiceTxt.textContent !== "5"  ) {    resTxt.textContent = "Defend";    MoveRight();  } else if (    playerChoiceTxt.textContent === "0" &&    rivalChoiceTxt.textContent === "5"  ) {    points[0]--;    resTxt.textContent = "Pa";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "5" &&    rivalChoiceTxt.textContent === "0"  ) {    points[1]--;    resTxt.textContent = "Pa";    MoveRight();  } else if (    playerChoiceTxt.textContent !== "5" &&    rivalChoiceTxt.textContent === "0"  ) {    resTxt.textContent = "Defend";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "10" &&    rivalChoiceTxt.textContent === "5"  ) {    points[0]++;    resTxt.textContent = "Hui";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "5" &&    rivalChoiceTxt.textContent === "10"  ) {    points[1]++;    resTxt.textContent = "Hui";    MoveRight();  } else if (    playerChoiceTxt.textContent === "10" &&    rivalChoiceTxt.textContent === "3"  ) {    points[1]--;    resTxt.textContent = "Kou";    MoveRight();  } else if (    playerChoiceTxt.textContent === "3" &&    rivalChoiceTxt.textContent === "10"  ) {    points[0]--;    resTxt.textContent = "Kou";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "9" &&    rivalChoiceTxt.textContent === "6"  ) {    points[0]++;    resTxt.textContent = "Hua";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "6" &&    rivalChoiceTxt.textContent === "9"  ) {    points[1]++;    resTxt.textContent = "Hua";    MoveRight();  } else if (    playerChoiceTxt.textContent === "9" &&    rivalChoiceTxt.textContent === "1"  ) {    points[1]--;    resTxt.textContent = "Dang";    MoveRight();  } else if (    playerChoiceTxt.textContent === "1" &&    rivalChoiceTxt.textContent === "9"  ) {    points[0]--;    resTxt.textContent = "Dang";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "8" &&    rivalChoiceTxt.textContent === "2"  ) {    var ch = confirm("Choose OK to PaPa or Cancel to PaHui");    if (ch == false) {      publishMessage("pahui," + user);      points[1] -= 1;      points[0] += 1;      resTxt.textContent = "PaHui";      MoveRight();    } else {      publishMessage("papa," + user);      points[1] -= 2;      resTxt.textContent = "PaPa";      MoveRight();    }  } else if (    playerChoiceTxt.textContent === "2" &&    rivalChoiceTxt.textContent === "8"  ) {    var papainterval = setInterval(function () {      if (papajudge != 0) {        if (papajudge == 2) {          points[0] -= 2;          resTxt.textContent = "PaPa";          MoveLeft();        } else if (papajudge == 1) {          points[0] -= 1;          points[1] += 1;          resTxt.textContent = "PaHui";          MoveLeft();        }        rivalNumber = 12;        papajudge = 0;        clearInterval(papainterval);      }    }, 1000);  } else if (    playerChoiceTxt.textContent === "7" &&    rivalChoiceTxt.textContent === "1"  ) {    act.disabled = false;    act.style.backgroundColor = "red";    resTxt.textContent = "Ci";    killjudge = true;    MoveLeft();  } else if (    playerChoiceTxt.textContent === "1" &&    rivalChoiceTxt.textContent === "7"  ) {    resTxt.textContent = "Ci";    kill = true;    MoveRight();  } else if (    playerChoiceTxt.textContent === "6" &&    rivalChoiceTxt.textContent === "1"  ) {    points[0]++;    resTxt.textContent = "Hui";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "1" &&    rivalChoiceTxt.textContent === "6"  ) {    points[1]++;    resTxt.textContent = "Hui";    MoveRight();  } else if (    playerChoiceTxt.textContent === "3" &&    rivalChoiceTxt.textContent === "2"  ) {    var cho = confirm("Choose OK to Kou or Cancel to Hui");    if (cho == false) {      points[0]++;      resTxt.textContent = "Hui";      MoveLeft();    } else {      points[1]--;      resTxt.textContent = "Kou";      MoveRight();    }  } else if (    playerChoiceTxt.textContent === "2" &&    rivalChoiceTxt.textContent === "3"  ) {    if (points[1] < 2) {      points[1]++;      resTxt.textContent = "Hui";      MoveRight();    } else {      points[0]--;      resTxt.textContent = "Kou";      MoveLeft();    }  } else if (playerChoiceTxt.textContent === "10") {    points[0]--;    resTxt.textContent = "Cha";    MoveLeft();  } else if (rivalChoiceTxt.textContent === "10") {    points[1]--;    resTxt.textContent = "Cha";    MoveRight();  } else if (playerChoiceTxt.textContent < rivalChoiceTxt.textContent) {    points[1]--;    resTxt.textContent = "Cha";    MoveRight();  } else if (playerChoiceTxt.textContent > rivalChoiceTxt.textContent) {    points[0]--;    resTxt.textContent = "Cha";    MoveLeft();  }}const Win = new Audio("../sound/Win.mp3");const Lose = new Audio("../sound/Lose.mp3");function whoWon() {  if (points[1] <= 0) {    rivalNumber = 12;    rivaljudge = 12;    playerjudge = 12;    kill = false;    status1.disabled = false;    status2.disabled = false;    status3.disabled = false;    status4.disabled = false;    Win.play();    winning = parseInt(winning) + 1;    setCookie("win", winning, 30);    alert("Win! Press any number to restart.");    points = [3, 3];    act.disabled = true;    killjudge = false;  } else if (points[0] <= 0) {    rivalNumber = 12;    rivaljudge = 12;    playerjudge = 12;    kill = false;    status1.disabled = false;    status2.disabled = false;    status3.disabled = false;    status4.disabled = false;    Lose.play();    losing = parseInt(losing) + 1;    setCookie("lose", losing, 30);    alert("Lose! Press any number to restart.");    points = [3, 3];    act.disabled = true;    killjudge = false;  }}function MoveRight() {  var elem = document.getElementById("resTxt");  var pos = 0;  var id = setInterval(frame, 1);  function frame() {    if (pos == 80) {      clearInterval(id);    } else {      pos++;      elem.style.left = pos + "px";    }  }}function MoveLeft() {  var elem = document.getElementById("resTxt");  var pos = 200;  var id = setInterval(frame, 1);  function frame() {    if (pos == 20) {      clearInterval(id);    } else {      pos--;      elem.style.left = pos + "px";    }  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/script.js"/>
      <url>/js/script.js</url>
      
        <content type="html"><![CDATA[function getCookie(cname) {  var name = cname + "=";  var ca = document.cookie.split(";");  for (var i = 0; i < ca.length; i++) {    var c = ca[i].trim();    if (c.indexOf(name) == 0) {      return c.substring(name.length, c.length);    }  }  if (cname == "username") {    return "";  } else return "0";}var recvJson = "";var user = getCookie("username");var winning = getCookie("win");var losing = getCookie("lose");function setCookie(cname, cvalue, exdays) {  var d = new Date();  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);  var expires = "expires=" + d.toGMTString();  document.cookie = cname + "=" + cvalue + "; " + expires;}function updateCookie(cname, cvalue, exdays) {  var d = new Date();  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);  var expires = "expires=" + d.toGMTString();  document.cookie = cname + "=" + cvalue + "; " + expires;}if (user != "") {  var c = confirm("Use history settings?");  if (c == false) {    user = prompt("Login", "Click Cancel to go offline");    if (user != "" && user != null) {      var data = JSON.stringify({        app_key: "E52FD4B9C437A0A520466D07684DB2A0",        return_data: "1",        model_name: "grade",        select: "username,win,lose",        logic: "or",        where: `[["username", "=", "${user}"]]`,        page: "1",        perpage: "10",        is_real_total: "1",      });      var newdata = JSON.stringify({        app_key: "E52FD4B9C437A0A520466D07684DB2A0",        return_data: "1",        model_name: "grade",        data: `{"username":"${user}","win":"${winning},"lose":"${losing}"}`,        check_field: "username",        logic: "or",      });      const Http = new XMLHttpRequest();      const url = "https://hn216.api.yesapi.cn/api/App/Table/FreeQuery";      const link =        "https://hn216.api.yesapi.cn/api/App/Table/CheckCreateOrUpdate";      Http.open("POST", url);      Http.send(data);      Http.onreadystatechange = (e) => {        if (Http.readyState == 4) {          recvJson = JSON.parse(Http.responseText);          if (typeof recvJson["list"]["0"] == "undefined") {            var r = confirm(              "Create a new player name? This will erase local data."            );            if (r == false) {              location.reload();            } else {              alert("Welcome," + user);              const xhr = new XMLHttpRequest();              xhr.open("POST", link);              xhr.send(newdata);              setCookie("username", user, 30);              setCookie("win", 0, 30);              setCookie("lose", 0, 30);            }          } else {            alert("Welcomeback," + user);            winning = recvJson["list"]["0"]["win"];            losing = recvJson["list"]["0"]["lose"];            setCookie("username", user, 30);            setCookie("win", winning, 30);            setCookie("lose", losing, 30);          }        }      };    }  } else {    alert("Welcomeback," + user);  }} else {  user = prompt("Login", "Click Cancel to go offline");  if (user != "" && user != null) {    var data = JSON.stringify({      app_key: "E52FD4B9C437A0A520466D07684DB2A0",      return_data: "1",      model_name: "grade",      select: "username,win,lose",      logic: "or",      where: `[["username", "=", "${user}"]]`,      page: "1",      perpage: "10",      is_real_total: "1",    });    var newdata = JSON.stringify({      app_key: "E52FD4B9C437A0A520466D07684DB2A0",      return_data: "1",      model_name: "grade",      data: `{"username":"${user}","win":"${winning},"lose":"${losing}"}`,      check_field: "username",      logic: "or",    });    const Http = new XMLHttpRequest();    const url = "https://hn216.api.yesapi.cn/api/App/Table/FreeQuery";    const link =      "https://hn216.api.yesapi.cn/api/App/Table/CheckCreateOrUpdate";    Http.open("POST", url);    Http.send(data);    Http.onreadystatechange = (e) => {      if (Http.readyState == 4) {        recvJson = JSON.parse(Http.responseText);        if (typeof recvJson["list"]["0"] == "undefined") {          var r = confirm(            "Create a new player name? This will erase local data."          );          if (r == false) {            location.reload();          } else {            alert("Welcome," + user);            const xhr = new XMLHttpRequest();            xhr.open("POST", link);            xhr.send(newdata);            setCookie("username", user, 30);            setCookie("win", 0, 30);            setCookie("lose", 0, 30);          }        } else {          alert("Welcomeback," + user);          winning = recvJson["list"]["0"]["win"];          losing = recvJson["list"]["0"]["lose"];          setCookie("username", user, 30);          setCookie("win", winning, 30);          setCookie("lose", losing, 30);        }      }    };  }}const link = "https://hn216.api.yesapi.cn/api/App/Table/CheckCreateOrUpdate";function Update() {  var update = JSON.stringify({    app_key: "E52FD4B9C437A0A520466D07684DB2A0",    return_data: "1",    model_name: "grade",    data: `{"username":"${user}","win":"${winning}","lose":"${losing}"}`,    check_field: "username",    logic: "or",  });  const request = new XMLHttpRequest();  request.open("POST", link);  request.send(update);  request.onreadystatechange = (e) => {    if (request.readyState == 4) {      alert("Success!");    }  };}// VARIABLESconst choices = [  {    id: 0,    image: "./asset/img/zero.png",  },  {    id: 1,    image: "./asset/img/one.png",  },  {    id: 2,    image: "./asset/img/two.png",  },  {    id: 3,    image: "./asset/img/three.png",  },  {    id: 4,    image: "./asset/img/four.png",  },  {    id: 5,    image: "./asset/img/five.png",  },  {    id: 6,    image: "./asset/img/six.png",  },  {    id: 7,    image: "./asset/img/seven.png",  },  {    id: 8,    image: "./asset/img/eight.png",  },  {    id: 9,    image: "./asset/img/nine.png",  },  {    id: 10,    image: "./asset/img/ten.png",  },  {    id: 11,    image: "./asset/img/seven-one.png",  },];let resTxt = document.querySelector("#resTxt");let playerPoints = document.querySelector(".playerPoints");let computerPoints = document.querySelector(".computerPoints");let playerChoiceImg = document.querySelector("#playerChoiceImg");let playerChoiceTxt = document.querySelector("#playerChoiceTxt");let computerChoiceImg = document.querySelector("#computerChoiceImg");let computerChoiceTxt = document.querySelector("#computerChoiceTxt");let buttons = document.querySelectorAll(".btn");let login = document.querySelector("#user");let points = [3, 3];let randomNumber;let res = document.querySelector("#res");var act = document.getElementById("act");var status1 = document.getElementById("status1");var status2 = document.getElementById("status2");var status3 = document.getElementById("status3");var status4 = document.getElementById("status4");let pvp = document.getElementById("multiplayer");let playerjudge = 12;let computerjudge = 12;killjudge = false;let kill = false;res.textContent =  `Player:${user}` + " " + `Winning:${winning}` + " " + `Losing:${losing}`;// EVENT LISTENERSbuttons.forEach((button) => {  button.addEventListener("click", () => {    playerPoints.textContent = points[0];    computerPoints.textContent = points[1];    if (button.textContent === "0") {      playerChoiceImg.src = choices[0].image;      playerChoiceTxt.textContent = choices[0].id;      playerjudge = 0;    } else if (button.textContent === "1") {      playerChoiceImg.src = choices[1].image;      playerChoiceTxt.textContent = choices[1].id;      playerjudge = 1;    } else if (button.textContent === "2") {      playerChoiceImg.src = choices[2].image;      playerChoiceTxt.textContent = choices[2].id;      playerjudge = 2;    } else if (button.textContent === "3") {      playerChoiceImg.src = choices[3].image;      playerChoiceTxt.textContent = choices[3].id;      playerjudge = 3;    } else if (button.textContent === "4") {      playerChoiceImg.src = choices[4].image;      playerChoiceTxt.textContent = choices[4].id;      playerjudge = 4;    } else if (button.textContent === "5") {      playerChoiceImg.src = choices[5].image;      playerChoiceTxt.textContent = choices[5].id;      playerjudge = 5;    } else if (button.textContent === "6") {      playerChoiceImg.src = choices[6].image;      playerChoiceTxt.textContent = choices[6].id;      playerjudge = 6;    } else if (button.textContent === "7") {      playerChoiceImg.src = choices[7].image;      playerChoiceTxt.textContent = choices[7].id;      playerjudge = 7;    } else if (button.textContent === "8") {      playerChoiceImg.src = choices[8].image;      playerChoiceTxt.textContent = choices[8].id;      playerjudge = 8;    } else if (button.textContent === "9") {      playerChoiceImg.src = choices[9].image;      playerChoiceTxt.textContent = choices[9].id;      playerjudge = 9;    } else if (button.textContent === "10") {      playerChoiceImg.src = choices[10].image;      playerChoiceTxt.textContent = choices[10].id;      playerjudge = 10;    } else if (button.textContent === "71") {      playerChoiceImg.src = choices[11].image;      playerChoiceTxt.textContent = choices[11].id;      act.disabled = true;      act.style.backgroundColor = "#404040 ";    }    getComputerChoice();  });});// FUNCTIONSfunction getComputerChoice() {  buttons.forEach((button) => {    button.disabled = true;  });  computerChoiceImg.src = "./asset/img/waiting.png";  var current = 10;  myinterval = setInterval(function () {    (computerChoiceImg.style.transform = "rotate(" + current + "deg)"),      (current += 10);  }, 20);  let time = Math.floor(Math.random() * 6 + 1) * 500;  setTimeout(() => {    if (kill == true) {      items = [11, 5];      randomNumber = items[Math.floor(Math.random() * 2)];      if (randomNumber == 11) kill = false;    } else if (act.disabled == false) {      items = [0, 0, 1, 10];      randomNumber = items[Math.floor(Math.random() * 4)];      if (randomNumber == 1) randomNumber = Math.floor(Math.random() * 4 + 1);    } else if (0 < computerjudge < 5) {      randomNumber = Math.floor(Math.random() * 11);      while (randomNumber == computerjudge)        randomNumber = Math.floor(Math.random() * 11);      if (0 < randomNumber < 5) {        computerjudge = randomNumber;      } else computerjudge = 12;    } else {      randomNumber = Math.floor(Math.random() * 11);      if (0 < randomNumber < 5) {        computerjudge = randomNumber;      }    }    clearInterval(myinterval);    computerChoiceImg.style.transform = null;    computerChoiceImg.src = choices[randomNumber].image;    computerChoiceTxt.textContent = choices[randomNumber].id;    gameRules();    playerPoints.textContent = points[0];    computerPoints.textContent = points[1];    buttons.forEach((button) => {      button.disabled = false;    });    if (playerjudge == 1) status1.disabled = true;    if (playerjudge == 2) status2.disabled = true;    if (playerjudge == 3) status3.disabled = true;    if (playerjudge == 4) status4.disabled = true;    if (killjudge == false) act.disabled = true;    setTimeout(() => {      whoWon();    }, 500);  }, time);}function gameRules() {  if (playerChoiceTxt.textContent === computerChoiceTxt.textContent) {    resTxt.textContent = "Tie";  } else if (    playerChoiceTxt.textContent === "11" &&    computerChoiceTxt.textContent !== "0"  ) {    points[1] -= 3;    resTxt.textContent = "Dong";    killjudge = false;    MoveRight();  } else if (    playerChoiceTxt.textContent !== "0" &&    computerChoiceTxt.textContent === "11"  ) {    points[0] -= 3;    resTxt.textContent = "Dong";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "0" &&    computerChoiceTxt.textContent !== "5"  ) {    resTxt.textContent = "Defend";    MoveRight();  } else if (    playerChoiceTxt.textContent === "0" &&    computerChoiceTxt.textContent === "5"  ) {    points[0]--;    resTxt.textContent = "Pa";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "5" &&    computerChoiceTxt.textContent === "0"  ) {    points[1]--;    resTxt.textContent = "Pa";    MoveRight();  } else if (    playerChoiceTxt.textContent !== "5" &&    computerChoiceTxt.textContent === "0"  ) {    resTxt.textContent = "Defend";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "10" &&    computerChoiceTxt.textContent === "5"  ) {    points[0]++;    resTxt.textContent = "Hui";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "5" &&    computerChoiceTxt.textContent === "10"  ) {    points[1]++;    resTxt.textContent = "Hui";    MoveRight();  } else if (    playerChoiceTxt.textContent === "10" &&    computerChoiceTxt.textContent === "3"  ) {    points[1]--;    resTxt.textContent = "Kou";    MoveRight();  } else if (    playerChoiceTxt.textContent === "3" &&    computerChoiceTxt.textContent === "10"  ) {    points[0]--;    resTxt.textContent = "Kou";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "9" &&    computerChoiceTxt.textContent === "6"  ) {    points[0]++;    resTxt.textContent = "Hua";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "6" &&    computerChoiceTxt.textContent === "9"  ) {    points[1]++;    resTxt.textContent = "Hua";    MoveRight();  } else if (    playerChoiceTxt.textContent === "9" &&    computerChoiceTxt.textContent === "1"  ) {    points[1]--;    resTxt.textContent = "Dang";    MoveRight();  } else if (    playerChoiceTxt.textContent === "1" &&    computerChoiceTxt.textContent === "9"  ) {    points[0]--;    resTxt.textContent = "Dang";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "8" &&    computerChoiceTxt.textContent === "2"  ) {    var ch = confirm("Choose OK to PaPa or Cancel to PaHui");    if (ch == false) {      points[1] -= 1;      points[0] += 1;      resTxt.textContent = "PaHui";      MoveRight();    } else {      points[1] -= 2;      resTxt.textContent = "PaPa";      MoveRight();    }  } else if (    playerChoiceTxt.textContent === "2" &&    computerChoiceTxt.textContent === "8"  ) {    if (points[0] == 2 || points[1] > 1) {      points[0] -= 2;      resTxt.textContent = "PaPa";      MoveLeft();    } else {      points[0] -= 1;      points[1] += 1;      resTxt.textContent = "PaHui";      MoveLeft();    }  } else if (    playerChoiceTxt.textContent === "7" &&    computerChoiceTxt.textContent === "1"  ) {    act.disabled = false;    act.style.backgroundColor = "red";    resTxt.textContent = "Ci";    killjudge = true;    MoveLeft();  } else if (    playerChoiceTxt.textContent === "1" &&    computerChoiceTxt.textContent === "7"  ) {    resTxt.textContent = "Ci";    kill = true;    MoveRight();  } else if (    playerChoiceTxt.textContent === "6" &&    computerChoiceTxt.textContent === "1"  ) {    points[0]++;    resTxt.textContent = "Hui";    MoveLeft();  } else if (    playerChoiceTxt.textContent === "1" &&    computerChoiceTxt.textContent === "6"  ) {    points[1]++;    resTxt.textContent = "Hui";    MoveRight();  } else if (    playerChoiceTxt.textContent === "3" &&    computerChoiceTxt.textContent === "2"  ) {    var cho = confirm("Choose OK to Kou or Cancel to Hui");    if (cho == false) {      points[0]++;      resTxt.textContent = "Hui";      MoveLeft();    } else {      points[1]--;      resTxt.textContent = "Kou";      MoveRight();    }  } else if (    playerChoiceTxt.textContent === "2" &&    computerChoiceTxt.textContent === "3"  ) {    if (points[1] < 2) {      points[1]++;      resTxt.textContent = "Hui";      MoveRight();    } else {      points[0]--;      resTxt.textContent = "Kou";      MoveLeft();    }  } else if (playerChoiceTxt.textContent === "10") {    points[0]--;    resTxt.textContent = "Cha";    MoveLeft();  } else if (computerChoiceTxt.textContent === "10") {    points[1]--;    resTxt.textContent = "Cha";    MoveRight();  } else if (playerChoiceTxt.textContent < computerChoiceTxt.textContent) {    points[1]--;    resTxt.textContent = "Cha";    MoveRight();  } else if (playerChoiceTxt.textContent > computerChoiceTxt.textContent) {    points[0]--;    resTxt.textContent = "Cha";    MoveLeft();  }}const Win = new Audio("/asset/sound/Win.mp3");const Lose = new Audio("asset/sound/Lose.mp3");function whoWon() {  if (points[1] <= 0) {    computerjudge = 12;    playerjudge = 12;    kill = false;    status1.disabled = false;    status2.disabled = false;    status3.disabled = false;    status4.disabled = false;    Win.play();    winning = parseInt(winning) + 1;    setCookie("win", winning, 30);    alert("Win！Press any number to restart.");    points = [3, 3];    act.disabled = true;    killjudge = false;  } else if (points[0] <= 0) {    computerjudge = 12;    playerjudge = 12;    kill = false;    status1.disabled = false;    status2.disabled = false;    status3.disabled = false;    status4.disabled = false;    Lose.play();    losing = parseInt(losing) + 1;    setCookie("lose", losing, 30);    alert("Lose! Press any number to restart.");    points = [3, 3];    act.disabled = true;    killjudge = false;  }  res.textContent =    `Player:${user}` + " " + `Winning:${winning}` + " " + `Losing:${losing}`;}function MoveRight() {  var elem = document.getElementById("resTxt");  var pos = 0;  var id = setInterval(frame, 1);  function frame() {    if (pos == 80) {      clearInterval(id);    } else {      pos++;      elem.style.left = pos + "px";    }  }}function MoveLeft() {  var elem = document.getElementById("resTxt");  var pos = 200;  var id = setInterval(frame, 1);  function frame() {    if (pos == 20) {      clearInterval(id);    } else {      pos--;      elem.style.left = pos + "px";    }  }}function openWindow() {  new MyLayer({    top: "10%",    left: "10%",    width: "80%",    height: "80%",    title: "Leaderboard",    content: "",    url: "https://open.yesapi.cn/?r=Share/Data&hash=E52FD4B9C437A0A520466D07684DB2A0CF17C3980F9351D6249C476CB06780E8#pageTop",  }).openLayer();}function newWindow() {  new MyLayer({    top: "10%",    left: "10%",    width: "80%",    height: "80%",    title: "Game Rules",    content: "",    url: "/html/rules.html",  }).openLayer();}pvp.onclick = function () {  window.location.href = encodeURI("./asset/pages/multiplayer.html?id=" + user);};//Iframefunction MyLayer(options) {  this.options = options;}MyLayer.prototype.openLayer = function () {  var background_layer = document.createElement("div");  background_layer.style.display = "none";  background_layer.style.position = "absolute";  background_layer.style.top = "0px";  background_layer.style.left = "0px";  background_layer.style.width = "100%";  background_layer.style.height = "100%";  background_layer.style.backgroundColor = "gray";  background_layer.style.zIndex = "1001";  background_layer.style.opacity = "0.8";  var open_layer = document.createElement("div");  open_layer.style.display = "none";  open_layer.style.position = "absolute";  open_layer.style.top =    this.options.top === undefined ? "10%" : this.options.top;  open_layer.style.left =    this.options.left === undefined ? "10%" : this.options.left;  open_layer.style.width =    this.options.width === undefined ? "80%" : this.options.width;  open_layer.style.height =    this.options.height === undefined ? "80%" : this.options.height;  open_layer.style.border = "";  open_layer.style.borderRadius = "15px";  open_layer.style.boxShadow = "4px 4px 10px #171414";  open_layer.style.backgroundColor = "white";  open_layer.style.zIndex = "1002";  open_layer.style.overflow = "auto";  var div_toolBar = document.createElement("div");  div_toolBar.style.textAlign = "right";  div_toolBar.style.paddingTop = "10px";  div_toolBar.style.backgroundColor = "aliceblue";  div_toolBar.style.height = "40px";  var span_title = document.createElement("span");  span_title.style.fontSize = "18px";  span_title.style.color = "black";  span_title.style.float = "left";  span_title.style.marginLeft = "20px";  var span_title_content = document.createTextNode(    this.options.title === undefined ? "" : this.options.title  );  span_title.appendChild(span_title_content);  div_toolBar.appendChild(span_title);  var span_close = document.createElement("span");  span_close.style.fontSize = "16px";  span_close.style.color = "black";  span_close.style.cursor = "pointer";  span_close.style.marginRight = "20px";  span_close.onclick = function () {    open_layer.style.display = "none";    background_layer.style.display = "none";  };  var span_close_content = document.createTextNode("Close");  span_close.appendChild(span_close_content);  div_toolBar.appendChild(span_close);  open_layer.appendChild(div_toolBar);  //content  var div_content = document.createElement("div");  div_content.style.textAlign = "center";  var content_area = document.createTextNode(    this.options.content === undefined ? "" : this.options.content  );  div_content.appendChild(content_area);  open_layer.appendChild(div_content);  var iframe = document.createElement("iframe");  iframe.src = this.options.url === undefined ? "" : this.options.url;  iframe.style.width = "100%";  iframe.style.height = "100%";  open_layer.appendChild(iframe);  document.body.appendChild(open_layer);  document.body.appendChild(background_layer);  open_layer.style.display = "block";  background_layer.style.display = "block";};]]></content>
      
    </entry>
    
    
  
</search>
